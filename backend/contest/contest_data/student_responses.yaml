openapi: 3.0.0
info:
  title: Student responses service API
  description: API description in Markdown.
  version: 1.0.0

paths:
  /user/contest/create:
    post:
      summary: Create user's response for the contest
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUserResponse'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonResponseInfo'
        '404':
          description: User or contest not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /user/contest/by-id/{contest_id}/answer/{task_id}:
    get:
      summary: Get current user answer for the task
      security:
        - cookieJWTAuth: [ ]
      parameters:
        - in: path
          description: Id of the contest
          name: contest_id
          required: true
          schema:
            type: integer
        - in: task_id
          description: Id of the task
          name: task_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userContestAnswer'
        '404':
          description: User, contest or task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /user/by-id/{user_id}/contest/by-id/{contest_id}/answer/{task_id}:
    get:
      summary: Get user answer for the task
      security:
        - cookieJWTAuth: [ ]
      parameters:
        - in: path
          description: Id of the user
          name: user_id
          required: true
          schema:
            type: integer
        - in: path
          description: Id of the contest
          name: contest_id
          required: true
          schema:
            type: integer
        - in: task_id
          description: Id of the task
          name: task_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userContestAnswer'
        '403':
          description: Not enough rights for current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '404':
          description: User, contest or task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /user/contest/by-id/{contest_id}/answer/{task_id}/add:
    post:
      summary: Add current user answer for a task
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the contest
          name: contest_id
          required: true
          schema:
            type: integer
        - in: task_id
          description: Id of the task
          name: task_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userContestAnswer'
      responses:
        '200':
          description: OK
        '404':
          description: User, contest or task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /user/by-id/{user_id}/contest/by-id/{contest_id}/answer/{task_id}/add:
    post:
      summary: Add user answer for a task
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the user
          name: user_id
          required: true
          schema:
            type: integer
        - in: path
          description: Id of the contest
          name: contest_id
          required: true
          schema:
            type: integer
        - in: task_id
          description: Id of the task
          name: task_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userContestAnswer'
      responses:
        '200':
          description: OK
        '403':
          description: Not enough rights for current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '404':
          description: User, contest or task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /user/by-id/{user_id}/contest/by-id/{contest_id}/mark/add:
    post:
      summary: Set mark to user's response
      description: Set mark to user's response, only for inspector
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the user
          name: user_id
          required: true
          schema:
            type: integer
        - in: path
          description: Id of the contest
          name: contest_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/commonResponseMark'
      responses:
        '200':
          description: OK
        '400':
          description: Incorrect mark. Must be 0 to 100
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Invalid role of current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '404':
          description: User or contest not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /user/by-id/{user_id}/contest/by-id/{contest_id}/mark/:
    get:
      summary: Get user's mark for contest
      security:
        - cookieJWTAuth: [ ]
      parameters:
        - in: path
          description: Id of the user
          name: user_id
          required: true
          schema:
            type: integer
        - in: path
          description: Id of the contest
          name: contest_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonResponseMark'
        '403':
          description: Invalid role of current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '404':
          description: User or contest not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /user/by-id/{user_id}/contest/by-id/{contest_id}/status:
    get:
      summary: Get user's response status
      security:
        - cookieJWTAuth: [ ]
      parameters:
        - in: path
          description: Id of the user
          name: user_id
          required: true
          schema:
            type: integer
        - in: path
          description: Id of the contest
          name: contest_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userResponseStatus'
        '403':
          description: Invalid role of current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '404':
          description: User or contest not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /user/by-id/{user_id}/contest/by-id/{contest_id}/status/set:
    post:
      summary: Set new status to user's response
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the user
          name: user_id
          required: true
          schema:
            type: integer
        - in: path
          description: Id of the contest
          name: contest_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userResponseStatus'
      responses:
        '200':
          description: OK
        '400':
          description: Incorrect status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '404':
          description: User or contest not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /user/by-id/{user_id}/contest/by-id/{contest_id}/status/history:
    get:
      summary: Get status history of user's work
      security:
        - cookieJWTAuth: [ ]
      parameters:
        - in: path
          description: Id of the user
          name: user_id
          required: true
          schema:
            type: integer
        - in: path
          description: Id of the contest
          name: contest_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userResponseStatusHistory'
        '403':
          description: Not enough rights for current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '404':
          description: User or contest not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /contest/by-id/{contest_id}/list/:
    get:
      summary: Get the consolidated sheets within a single competition or stage
      security:
        - cookieJWTAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contestResultSheet'
  /user/by-id/{user_id}/contest/by-id/{contest_id}/appeal/create:
    post:
      summary: Create appeal for the user's response
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the user
          name: user_id
          required: true
          schema:
            type: integer
        - in: path
          description: Id of the contest
          name: contest_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/appealMessage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonAppealInfo'
        '403':
          description: Not enough rights for current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '404':
          description: User or contest not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /user/contest/by-id/{contest_id}/appeal/create:
    post:
      summary: Create appeal for the user's response
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the contest
          name: contest_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/appealMessage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonAppealInfo'
        '404':
          description: User or contest not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /response/by-id/{work_id}/appeal/create:
    post:
      summary: Create appeal for the user's response
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the work
          name: work_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/appealMessage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonAppealInfo'
        '404':
          description: User or contest not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /user/by-id/{user_id}/contest/by-id/{contest_id}/appeal/reply:
    post:
      summary: Reply appeal for the user's response
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the user
          name: user_id
          required: true
          schema:
            type: integer
        - in: path
          description: Id of the contest
          name: contest_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/appealMessage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonAppealInfo'
        '404':
          description: User or contest not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /appeal/by-id/{appeal_id}/reply:
    post:
      summary: Reply appeal for the user's response
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the appeal
          name: appeal_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/appealMessage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonAppealInfo'
        '404':
          description: Appeal not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /response/by-id/{work_id}/appeal/reply:
    post:
      summary: Reply appeal for the user's response
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the work
          name: work_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/appealMessage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonAppealInfo'
        '404':
          description: User or contest not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /appeal/by-id/{appeal_id}:
    get:
      summary: Get appeal info
      security:
        - cookieJWTAuth: [ ]
      parameters:
        - in: path
          description: Id of the appeal
          name: appeal_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonAppealInfo'
        '404':
          description: Appeal not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'


components:
  securitySchemes:
    cookieJWTAuth:
      description: Authentication with JWT stored in cookies
      type: apiKey
      in: cookie
      name: access_token_cookie
    CSRFToken:
      description: CSRF token
      type: apiKey
      in: header
      name: X-CSRF-TOKEN
  schemas:
    errorResponse:
      title: "Error response"
      description: "Common response with error message"
      required:
        - error_msg
      properties:
        error_msg:
          type: string
    createUserResponse:
      title: "Create user's work"
      description: "Request to create user's response"
      required:
        - user_id
        - contest_id
      properties:
        user_id:
          type: integer
        contest_id:
          type: integer
    userContestAnswer:
      title: "User's contest answer"
      required:
        - user_answer
      properties:
        user_answer:
          type: string
          format: binary
    commonResponseInfo:
      title: "Common response info"
      required:
        - work_id
        - user_id
        - contest_id
      properties:
        work_id:
          type: integer
        user_id:
          type: integer
        contest_id:
          type: integer
    commonResponseMark:
      title: "Common user's mark for response"
      required:
        - user_id
        - contest_id
        - mark
      properties:
        user_id:
          type: integer
        contest_id:
          type: integer
        mark:
          type: integer
    userResponseStatus:
      title: "Status of user response"
      required:
        - user_id
        - contest_id
        - status
      properties:
        user_id:
          type: integer
        contest_id:
          type: integer
        status:
          type: string
    StatusHistoryItem:
      title: "Item of status history"
      required:
        - status
        - datetime
      properties:
        status:
          type: string
        datetime:
          type: string
          format: data-time
          description: "Change date and time"
    userResponseStatusHistory:
      title: "Status history of user response"
      required:
        - user_id
        - contest_id
        - history
      properties:
        user_id:
          type: integer
        contest_id:
          type: integer
        history:
          type: array
          items:
            $ref: '#/components/schemas/StatusHistoryItem'
    contestResultLine:
      title: "Line in sheet"
      required:
        - user_id
        - first_name
        - second_name
        - middle_name
        - mark
      properties:
        user_id:
          type: integer
        first_name:
          type: string
        second_name:
          type: string
        middle_name:
          type: string
        mark:
          type: integer
    contestResultSheet:
      title: "Result sheet for one contest"
      required:
        - contest_id
        - contest_name
        - userrow
      properties:
        contest_id:
          type: integer
        contest_name:
          type: string
        userrow:
          type: array
          items:
            $ref: '#/components/schemas/contestResultLine'
    appealMessage:
      title: Appeal message
      required:
        - message
      properties:
        message:
          type: string
    commonAppealInfo:
      title: "Common appeal info"
      required:
        - appeal_id
        - status
        - appeal_message
        - appeal_response
      properties:
        appeal_id:
          type: integer
        status:
          type: string
        appeal_message:
          type: string
        appeal_response:
          type: string

