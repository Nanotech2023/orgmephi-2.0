openapi: 3.0.0
info:
  title: Tasks service API
  description: API description in Markdown.
  version: 1.0.0

paths:
  /olympiad/create:
    post:
      summary: Create a new olimpiad
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOlympiad'
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/olympiadInfo'

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/{id}/remove:
    post:
      summary: Remove olympiad
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/removeOlympiad'
      parameters:
        - in: path
          description: Id of the olympiad
          name: id
          required: true
          schema:
            type: integer
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/removeOlympiad'
        '404':
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/{id}:
    get:
      summary: Get info for the olympiad
      security: []
      parameters:
        - in: path
          description: Id of the olympiad
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/olympiadInfo'

        '404':
          description: Contest not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    patch:
      summary: Edit olympiad info
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the olympiad
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/olympiadInfoUpdate'
      responses:
        '200':
          description: OK
        '404':
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olypmiad/stage/{id}/contest/create:
    post:
      summary: Create a new contest
      parameters:
        - in: path
          description: Id of the stage
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createContest'
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonContestInfo'

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/{id}/stage/create:
    post:
      summary: Create a new stage in oimpiad
      parameters:
        - in: path
          description: Id of the olympiad
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createStage'
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stageInfo'

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /contest/{id}/remove:
    post:
      summary: Remove contest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/removeContest'
      parameters:
        - in: path
          description: Id of the contest
          name: id
          required: true
          schema:
            type: integer
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/removeContest'
        '404':
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /contest/{id}:
    get:
      summary: Get common info for a contest
      security: []
      parameters:
        - in: path
          description: Id of the contest
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonContestInfo'

        '404':
          description: Contest not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    patch:
      summary: Edit contest info
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the contest
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contestInfoUpdate'
      responses:
        '200':
          description: OK
        '404':
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/stage/{id}/remove:
    post:
      summary: Remove stage from olympiad
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/removeStage'
      parameters:
        - in: path
          description: Id of the stage
          name: id
          required: true
          schema:
            type: integer
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/removeStage'
        '404':
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/stage/{id}:
    get:
      summary: Get common info for a different stage
      security: []
      parameters:
        - in: path
          description: Id of the stage
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stageInfo'
        '404':
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

    patch:
      summary: Set stage info for a olympiad
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the stage
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stageInfoUpdate'
      responses:
        '200':
          description: OK
        '404':
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/stage/contest/{id}/variant/create:
    post:
      summary: Create a new variant
      parameters:
        - in: path
          description: Id of the contest
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createVariant'
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/variantInfo'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/stage/contest/variant/{id}/remove:
    post:
      summary: Remove variant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/removeVariant'
      parameters:
        - in: path
          description: Id of the variant
          name: id
          required: true
          schema:
            type: integer
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/removeVariant'
        '404':
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/stage/contest/variant/{id}:
    get:
      summary: Get info for a different variant
      security: []
      parameters:
        - in: path
          description: Id of the variant
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/variantInfo'
        '404':
          description: Variant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    patch:
      summary: Edit variant
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the variant
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/variantInfoUpdate'
      responses:
        '200':
          description: OK
        '404':
          description: Variant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/stage/contest/variant/{id}/plain_task/create:
    post:
      summary: Create a new task with plain text
      parameters:
        - in: path
          description: Id of the variant
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createPlainTask'
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonPlainTaskInfo'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/stage/contest/variant/plain_task/{id}/remove:
    post:
      summary: Remove task with plain text
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/removePlainTextTask'
      parameters:
        - in: path
          description: Id of the task
          name: id
          required: true
          schema:
            type: integer
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/removePlainTextTask'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/stage/contest/variant/plain_task/{id}:
    get:
      summary: Get common info for a different plain text task
      security: []
      parameters:
        - in: path
          description: Id of the plain task
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonPlainTaskInfo'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    patch:
      summary: Edit plain text task
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the task
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/plainTaskInfoUpdate'
      responses:
        '200':
          description: OK
        '404':
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/stage/contest/variant/plain_task/{id}/right_answer:
    get:
      summary: Get right answer for common info for a different plain text task
      security: []
      parameters:
        - in: path
          description: Id of the plain task
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/answerPlainTaskInfo'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/stage/contest/variant/{id}/range_task/create:
    post:
      summary: Create a new task with range
      parameters:
        - in: path
          description: Id of the variant
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createRangeTask'
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rangeTaskInfo'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/stage/contest/variant/range_task/{id}/remove:
    post:
      summary: Remove range task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/removeRangeTask'
      parameters:
        - in: path
          description: Id of the task
          name: id
          required: true
          schema:
            type: integer
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/removeRangeTask'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/stage/contest/variant/range_task/{id}:
    get:
      summary: Get info for a different range task
      security: []
      parameters:
        - in: path
          description: Id of the range task
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rangeTaskInfo'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    patch:
      summary: Edit range task
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the task
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rangeTaskInfoUpdate'
      responses:
        '200':
          description: OK
        '404':
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/stage/contest/variant/range_task/{id}/right_answer:
    get:
      summary: Get right answer info for a different range task
      security: []
      parameters:
        - in: path
          description: Id of the range task
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/answerRangeTaskInfo'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/stage/contest/variant/{id}/multiple_task/create:
    post:
      summary: Create a new task with multiple answer
      parameters:
        - in: path
          description: Id of the variant
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createMultipleTask'
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/multipleTaskInfo'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/stage/contest/variant/multiple_task/{id}/add_answer:
    post:
      summary: Add answer to Multiple task list
      parameters:
        - in: path
          description: Id of the task
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createMultipleTask'
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/multipleTaskInfo'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/stage/contest/variant/multiple_task/{id}/remove:
    post:
      summary: Remove multiple task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/removeMultipleTask'
      parameters:
        - in: path
          description: Id of the task
          name: id
          required: true
          schema:
            type: integer
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/removeMultipleTask'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/stage/contest/variant/multiple_task/{id}:
    get:
      summary: Get common info for a multiple task
      security: []
      parameters:
        - in: path
          description: Id of the multiple task
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/multipleTaskInfo'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    patch:
      summary: Edit multiple task
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the task
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/multipleTaskInfoUpdate'
      responses:
        '200':
          description: OK
        '404':
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/stage/contest/variant/multiple_task/{id}/right_answer:
    get:
      summary: Get right answer common info for a multiple range task
      security: []
      parameters:
        - in: path
          description: Id of the multiple task
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/answerMultipleTaskInfo'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/stage/contest/{id}/user/{id}/add:
    post:
      summary: Add user to contest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateContestUsers'
      parameters:
        - in: path
          description: Id of the user
          name: user_id
          required: true
          schema:
            type: integer
        - in: path
          description: Id of the contest
          name: contest_id
          required: true
          schema:
            type: integer
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateContestUsers'
        '404':
          description: User or group not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/stage/contest/user/{id}/remove:
    post:
      summary: Remove user from contest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateContestUsers'
      parameters:
        - in: path
          description: Id of the user
          name: id
          required: true
          schema:
            type: integer
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateContestUsers'
        '404':
          description: User or group not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/{id}/get_stages:
    get:
      summary: list of stages in olympiad
      parameters:
        - in: path
          description: Id of the olympiad
          name: id
          required: true
          schema:
            type: integer
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stagesInOlympiad'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/stage/{id}/get_contests:
    get:
      summary: list of contests in stage
      parameters:
        - in: path
          description: Id of the stage
          name: id
          required: true
          schema:
            type: integer
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contestsInStage'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/stage/contest/{id}/variants:
    get:
      summary: list of variants in contest
      parameters:
        - in: path
          description: Id of the contest
          name: id
          required: true
          schema:
            type: integer
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/variantsInContest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'


  /olympiad/stage/contest/{id}/get_users:
    get:
      summary: list of user in contest
      parameters:
        - in: path
          description: Id of the contest
          name: id
          required: true
          schema:
            type: integer
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usersInContest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

components:
  securitySchemes:
    cookieJWTAuth:
      description: Authentication with JWT stored in cookies
      type: apiKey
      in: cookie
      name: access_token_cookie
    CSRFToken:
      description: CSRF token
      type: apiKey
      in: header
      name: X-CSRF-TOKEN
  schemas:
    errorResponse:
      title: Error response
      description: 'Common response with error message'
      required:
        - error_msg
      properties:
        error_msg:
          type: string
    createOlympiad:
      title: Create olympiad
      description: Request to olympiad creation
      required:
        - name
        - description
        - rules
      properties:
        name:
          type: string
        description:
          type: string
        rules:
          type: string
    olympiadInfo:
      title: Get olympiad information
      description: Request to get olympiad information
      required:
        - olympiad_id
        - name
        - description
        - rules
      properties:
        olympiad_id:
          type: integer
        name:
          type: string
        description:
          type: string
        rules:
          type: string
    olympiadInfoUpdate:
      title: Update olympiad information
      description: Request to update olympiad information
      properties:
        olympiad_id:
          type: integer
        name:
          type: string
        description:
          type: string
        rules:
          type: string
    removeOlympiad:
      title: Remove olympiad
      description: Request to remove olympiad
    createStage:
      title: Create stage
      description: Request to stage creation
      required:
        - stage_name
        - next_stage_condition
      properties:
        stage_name:
          type: string
        next_stage_condition:
          type: string
    stageInfo:
      title: Stage common info
      description: Request to get stage info
      required:
        - stage_id
        - stage_name
        - next_stage_condition
      properties:
        stage_id:
          type: integer
        stage_name:
          type: string
        composite_contest_id:
          type: integer
        next_stage_condition:
          type: string
    stageInfoUpdate:
      title: Edit stage common info
      description: Request to edit stage
      properties:
        stage_name:
          type: string
        next_stage_condition:
          type: string
    removeStage:
      title: Remove stage
      description: Request to remove stage
    createContest:
      title: Create contest
      description: Request to contest creation
      required:
        - description
        - rules
        - winning_condition
        - laureate_condition
        - certificate_template
        - visibility
        - start_date
        - end_time
      properties:
        start_time:
          type: string
          format: 'date-time'
        end_time:
          type: string
          format: 'date-time'
        description:
          type: string
        rules:
          type: string
        winning_condition:
          type: string
        laureate_condition:
          type: string
        certificate_template:
          type: string
        visibility:
          type: boolean
    commonContestInfo:
      title: Contest common info
      description: Request to get contest info
      required:
        - contest_id
        - description
        - rules
        - winning_condition
        - laureate_condition
        - certificate_template
        - visibility
        - start_date
        - end_time
      properties:
        start_time:
          type: string
          format: 'date-time'
        end_time:
          type: string
          format: 'date-time'
        contest_id:
          type: integer
        description:
          type: string
        rules:
          type: string
        winning_condition:
          type: string
        laureate_condition:
          type: string
        certificate_template:
          type: string
        visibility:
          type: boolean
    contestInfoUpdate:
      title: Edit contest common info
      description: Request to creation contest
      properties:
        start_time:
          type: string
          format: 'date-time'
        end_time:
          type: string
          format: 'date-time'
        description:
          type: string
        rules:
          type: string
        winning_condition:
          type: string
        laureate_condition:
          type: string
        certificate_template:
          type: string
        visibility:
          type: boolean
    removeContest:
      title: Remove contest
      description: Request to remove contest
    createVariant:
      title: Create variant
      description: Request to variant creation
      required:
        - variant_number
        - variant_description
      properties:
        variant_number:
          type: integer
        variant_description:
          type: string
    variantInfo:
      title: Common variant info
      description: Request to get variant info
      required:
        - variant_id
        - variant_number
        - variant_description
      properties:
        variant_id:
          type: integer
        variant_number:
          type: integer
        variant_description:
          type: string
    variantInfoUpdate:
      title: Edit variant
      description: Request to edit variant
      properties:
        variant_number:
          type: integer
        variant_description:
          type: string
    removeVariant:
      title: Remove variant
      description: Request to variant removing
    createPlainTask:
      title: Create plain text task
      description: Request to creation task with plain text
      required:
        - num_of_task
        - image_of_task
        - recommended_answer
      properties:
        num_of_task:
          type: integer
        image_of_task:
          type: string
          format: binary
        recommended_answer:
          type: string
    removePlainTextTask:
      title: Remove plain text task
      description: Request to remove task with plain text
    plainTaskInfoUpdate:
      title: Edit plain text task
      description: Request to edit task with plain text
      properties:
        num_of_task:
          type: integer
        image_of_task:
          type: string
          format: binary
        recommended_answer:
          type: string
    commonPlainTaskInfo:
      title: Plain text task info
      description: Request to getting task with plain text
      required:
        - task_id
        - num_of_task
        - image_of_task
        - recommended_answer
      properties:
        task_id:
          type: integer
        num_of_task:
          type: integer
        image_of_task:
          type: string
          format: binary
        recommended_answer:
          type: string
    answerPlainTaskInfo:
      title: Plain text task answer
      description: Request to get correct answer for plain text task
      required:
        - recommended_answer
      properties:
        recommended_answer:
          type: string
    createRangeTask:
      title: Create range text task
      description: Request to creation task with plain text
      required:
        - num_of_task
        - image_of_task
        - start_value
        - end_value
        - variant_id
      properties:
        variant_id:
          type: integer
        num_of_task:
          type: integer
        image_of_task:
          type: string
          format: binary
        start_value:
          type: number
          format: float
        end_value:
          type: number
          format: float
    removeRangeTask:
      title: Remove range task
      description: Request to remove task with range
    rangeTaskInfoUpdate:
      title: Edit range text task
      description: Request to edit task with plain text
      properties:
        num_of_task:
          type: integer
        image_of_task:
          type: string
          format: binary
        start_value:
          type: number
          format: float
        end_value:
          type: number
          format: float
    rangeTaskInfo:
      title: Range task info
      description: Request to creation task with plain text
      required:
        - task_id
        - num_of_task
        - image_of_task
        - start_value
        - end_value
      properties:
        task_id:
          type: integer
        num_of_task:
          type: integer
        image_of_task:
          type: string
          format: binary
        start_value:
          type: number
          format: float
        end_value:
          type: number
          format: float
    answerRangeTaskInfo:
      title: Range task answer
      description: Request to get correct answer for range choice task
      required:
        - start_value
        - end_value
      properties:
        start_value:
          type: number
          format: float
        end_value:
          type: number
          format: float
    createMultipleTask:
      title: Create multiple text task
      description: Request to creation task with plain text
      required:
        - num_of_task
        - image_of_task
        - correct_answer
      properties:
        num_of_task:
          type: integer
        image_of_task:
          type: string
          format: binary
        correct_answer:
          type: string
    removeMultipleTask:
      title: Remove multiple choice task
      description: Request to remove task with multiple choice
    multipleTaskInfoUpdate:
      title: Edit multiple text task
      description: Request to creation task with plain text
      properties:
        num_of_task:
          type: integer
        image_of_task:
          type: string
          format: binary
        correct_answer:
          type: string
    multipleTaskInfo:
      title: Multiple text task info
      description: Request to creation task with plain text
      required:
        - task_id
        - num_of_task
        - image_of_task
        - correct_answer
      properties:
        task_id:
          type: integer
        num_of_task:
          type: integer
        image_of_task:
          type: string
          format: binary
        correct_answer:
          type: string
    answerMultipleTaskInfo:
      title: Multiple task answer
      description: Request to get correct answer for multiple choice task
      required:
        - correct_answer
      properties:
        correct_answer:
          type: string
    usersInContest:
      title: Get users in contest
      description: Request to get users in contest
      required:
        - contest_id
      properties:
        contest_id:
          type: integer
        user_list:
          type: array
          items:
            type: object
            properties:
              user_id:
                type: integer
              variant_id:
                type: integer
              user_status:
                type: string
    updateContestUsers:
      title: Add or remove user to contest
      description: Request to add user to contest
      required:
        - variant_id
      properties:
        variant_id:
          type: integer
    stagesInOlympiad:
      title: Get stages in olympiad
      description: Request to get stages in olympiad
      required:
        - olympiad_id
      properties:
        olympiad_id:
          type: integer
        stages_list:
          type: array
          items:
            type: object
            properties:
              stage_id:
                type: integer
              stage_name:
                type: string
              composite_contest_id:
                type: integer
              next_stage_condition:
                type: string

    contestsInStage:
      title: Get contests in stage
      description: Request to get contests in stage
      required:
        - stage_id
      properties:
        stage_id:
          type: integer
        contests_list:
          type: array
          items:
            type: object
            properties:
              start_time:
                type: string
                format: 'date-time'
              end_time:
                type: string
                format: 'date-time'
              contest_id:
                type: integer
              description:
                type: string
              rules:
                type: string
              winning_condition:
                type: string
              laureate_condition:
                type: string
              certificate_template:
                type: string
              visibility:
                type: boolean
    variantsInContest:
      title: Get variants in contest
      description: Request to get variants in contest
      required:
        - contest_id
      properties:
        olympiad_id:
          type: integer
        variants_list:
          type: array
          items:
            type: object
            properties:
              variant_id:
                type: integer
              variant_number:
                type: integer
              variant_description:
                type: string

