openapi: 3.0.0
info:
  title: Tasks service API
  description: API description in Markdown.
  version: 1.0.0

paths:
  /olympiad/create:
    post:
      summary: Create a new olimpiad
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOlympiad'
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/olympiadInfo'

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/{id}/remove:
    post:
      summary: Remove olympiad
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/removeOlympiad'
      parameters:
        - in: path
          description: Id of the olympiad
          name: id
          required: true
          schema:
            type: integer
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/removeOlympiad'
        '404':
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /olympiad/{id}:
    get:
      summary: Get info for the olympiad
      security: []
      parameters:
        - in: path
          description: Id of the olympiad
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/olympiadInfo'

        '404':
          description: Contest not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    patch:
      summary: Edit olympiad info
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the olympiad
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/olympiadInfoUpdate'
      responses:
        '200':
          description: OK
        '404':
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /contest/create:
    post:
      summary: Create a new contest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createContest'
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonContestInfo'

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /contest/stage/create:
    post:
      summary: Create a new stage in oimpiad
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createStage'
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stageInfo'

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /contest/{id}/remove:
    post:
      summary: Remove contest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/removeContest'
      parameters:
        - in: path
          description: Id of the contest
          name: id
          required: true
          schema:
            type: integer
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/removeContest'
        '404':
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /contest/{id}:
    get:
      summary: Get common info for a contest
      security: []
      parameters:
        - in: path
          description: Id of the contest
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonContestInfo'

        '404':
          description: Contest not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    patch:
      summary: Edit contest info
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the contest
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contestInfoUpdate'
      responses:
        '200':
          description: OK
        '404':
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /contest/stage/{id}/remove:
    post:
      summary: Remove stage from olympiad
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/removeStage'
      parameters:
        - in: path
          description: Id of the stage
          name: id
          required: true
          schema:
            type: integer
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/removeStage'
        '404':
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /contest/stage/{id}:
    get:
      summary: Get common info for a different stage
      security: []
      parameters:
        - in: path
          description: Id of the stage
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stageInfo'
        '404':
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

    patch:
      summary: Set stage info for a olympiad
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the stage
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stageInfoUpdate'
      responses:
        '200':
          description: OK
        '404':
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'


  /contest/variant/create:
    post:
      summary: Create a new variant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createVariant'
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/variantInfo'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /contest/variant/{id}/remove:
    post:
      summary: Remove variant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/removeVariant'
      parameters:
        - in: path
          description: Id of the variant
          name: id
          required: true
          schema:
            type: integer
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/removeVariant'
        '404':
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /contest/variant/{id}:
    get:
      summary: Get info for a different variant
      security: []
      parameters:
        - in: path
          description: Id of the variant
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/variantInfo'
        '404':
          description: Variant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    patch:
      summary: Edit variant
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the variant
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/variantInfoUpdate'
      responses:
        '200':
          description: OK
        '404':
          description: Variant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /contest/variant/plain_task/create:
    post:
      summary: Create a new task with plain text
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createPlainTask'
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonPlainTaskInfo'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /contest/variant/plain_task/{id}/remove:
    post:
      summary: Remove task with plain text
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/removePlainTextTask'
      parameters:
        - in: path
          description: Id of the task
          name: id
          required: true
          schema:
            type: integer
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/removePlainTextTask'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /contest/variant/plain_task/{id}:
    get:
      summary: Get common info for a different plain text task
      security: []
      parameters:
        - in: path
          description: Id of the plain task
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonPlainTaskInfo'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    patch:
      summary: Edit plain text task
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the task
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/plainTaskInfoUpdate'
      responses:
        '200':
          description: OK
        '404':
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'



  /contest/variant/plain_task/{id}/right_answer:
    get:
      summary: Get right answer for common info for a different plain text task
      security: []
      parameters:
        - in: path
          description: Id of the plain task
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/answerPlainTaskInfo'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /contest/variant/range_task/create:
    post:
      summary: Create a new task with range
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createRangeTask'
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rangeTaskInfo'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /contest/variant/range_task/{id}/remove:
    post:
      summary: Remove range task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/removeRangeTask'
      parameters:
        - in: path
          description: Id of the task
          name: id
          required: true
          schema:
            type: integer
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/removeRangeTask'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /contest/variant/range_task/{id}:
    get:
      summary: Get info for a different range task
      security: []
      parameters:
        - in: path
          description: Id of the range task
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rangeTaskInfo'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    patch:
      summary: Edit range task
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the task
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rangeTaskInfoUpdate'
      responses:
        '200':
          description: OK
        '404':
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'


  /contest/variant/range_task/{id}/right_answer:
    get:
      summary: Get right answer info for a different range task
      security: []
      parameters:
        - in: path
          description: Id of the range task
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/answerRangeTaskInfo'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /contest/variant/multiple_task/create:
    post:
      summary: Create a new task with multiple answer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createMultipleTask'
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/multipleTaskInfo'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /contest/variant/multiple_task/add_answer:
    post:
      summary: Add answer to Multiple task list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createMultipleTask'
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/multipleTaskInfo'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /contest/variant/multiple_task/{id}/remove:
    post:
      summary: Remove multiple task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/removeMultipleTask'
      parameters:
        - in: path
          description: Id of the task
          name: id
          required: true
          schema:
            type: integer
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/removeMultipleTask'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'


  /contest/variant/multiple_task/{id}:
    get:
      summary: Get common info for a multiple task
      security: []
      parameters:
        - in: path
          description: Id of the multiple task
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/multipleTaskInfo'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    patch:
      summary: Edit multiple task
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      parameters:
        - in: path
          description: Id of the task
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/multipleTaskInfoUpdate'
      responses:
        '200':
          description: OK
        '404':
          description: Stage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /contest/variant/multiple_task/{id}/right_answer:
    get:
      summary: Get right answer common info for a multiple range task
      security: []
      parameters:
        - in: path
          description: Id of the multiple task
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/answerMultipleTaskInfo'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /user/{id}/contest/add:
    post:
      summary: Add user to contest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateContest'
      parameters:
        - in: path
          description: Id of the user
          name: id
          required: true
          schema:
            type: integer
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateContest'
        '404':
          description: User or group not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'


  /user/{id}/contest/remove:
    post:
      summary: Remove user from contest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateContest'
      parameters:
        - in: path
          description: Id of the user
          name: id
          required: true
          schema:
            type: integer
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateContest'
        '404':
          description: User or group not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'


  /contest/user/get:
    get:
      summary: list of user in contest
      security:
        - cookieJWTAuth: [ ]
        - CSRFToken: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usersInContest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

components:
  securitySchemes:
    cookieJWTAuth:
      description: Authentication with JWT stored in cookies
      type: apiKey
      in: cookie
      name: access_token_cookie
    CSRFToken:
      description: CSRF token
      type: apiKey
      in: header
      name: X-CSRF-TOKEN
  schemas:
    errorResponse:
      title: Error response
      description: 'Common response with error message'
      required:
        - error_msg
      properties:
        error_msg:
          type: string
    createContest:
      title: Create contest
      description: Request to creation contest
      required:
        - description
        - rules
        - winning_condition
        - laureate_condition
        - certificate_template
        - visibility
        - start_date
        - end_time
      properties:
        start_time:
          type: string
          format: 'date-time'
        end_time:
          type: string
          format: 'date-time'
        description:
          type: string
        rules:
          type: string
        winning_condition:
          type: string
        laureate_condition:
          type: string
        certificate_template:
          type: string
        visibility:
          type: boolean
    commonContestInfo:
      title: Contest common info
      description: Request to creation contest
      required:
        - contest_id
        - description
        - rules
        - winning_condition
        - laureate_condition
        - certificate_template
        - visibility
        - start_date
        - end_time
      properties:
        start_time:
          type: string
          format: 'date-time'
        end_time:
          type: string
          format: 'date-time'
        contest_id:
          type: integer
        description:
          type: string
        rules:
          type: string
        winning_condition:
          type: string
        laureate_condition:
          type: string
        certificate_template:
          type: string
        visibility:
          type: boolean
    createStage:
      title: Create stage
      description: Request to stage creation
      required:
        - stage_name
        - composite_contest_id
        - next_stage_condition
      properties:
        stage_name:
          type: string
        composite_contest_id:
          type: integer
        next_stage_condition:
          type: string
    stageInfo:
      title: Stage common info
      description: Request to stage creation
      required:
        - stage_id
        - stage_name
        - composite_contest_id
        - next_stage_condition
      properties:
        stage_id:
          type: integer
        stage_name:
          type: string
        composite_contest_id:
          type: integer
        next_stage_condition:
          type: string
    createVariant:
      title: Create variant
      description: Request to variant creation
      required:
        - variant_number
        - variant_description
        - contest_id
      properties:
        contest_id:
          type: integer
        variant_number:
          type: integer
        variant_description:
          type: string
    variantInfo:
      title: Common variant info
      description: Request to variant creation
      required:
        - variant_id
        - variant_number
        - variant_description
        - contest_id
      properties:
        contest_id:
          type: integer
        variant_id:
          type: integer
        variant_number:
          type: integer
        variant_description:
          type: string
    removePlainTextTask:
      title: Remove plain text task
      description: Request to remove task with plain text
    plainTaskInfoUpdate:
      title: Edit plain text task
      description: Request to edit task with plain text
      properties:
        variant_id:
          type: integer
        num_of_task:
          type: integer
        image_of_task:
          type: string
          format: binary
        recommended_answer:
          type: string


    createPlainTask:
      title: Create plain text task
      description: Request to creation task with plain text
      required:
        - num_of_task
        - image_of_task
        - recommended_answer
        - variant_id
      properties:
        variant_id:
          type: integer
        num_of_task:
          type: integer
        image_of_task:
          type: string
          format: binary
        recommended_answer:
          type: string
    commonPlainTaskInfo:
      title: Plain text task info
      description: Request to creation task with plain text
      required:
        - task_id
        - num_of_task
        - image_of_task
        - recommended_answer
        - variant_id
      properties:
        variant_id:
          type: integer
        task_id:
          type: integer
        num_of_task:
          type: integer
        image_of_task:
          type: string
          format: binary
        recommended_answer:
          type: string
    answerPlainTaskInfo:
      title: Plain text task answer
      description: Request to get correct answer for plain text task
      required:
        - recommended_answer
      properties:
        recommended_answer:
          type: string
    removeRangeTask:
      title: Remove range task
      description: Request to remove task with range
    rangeTaskInfoUpdate:
      title: Edit range text task
      description: Request to edit task with plain text
      properties:
        variant_id:
          type: integer
        num_of_task:
          type: integer
        image_of_task:
          type: string
          format: binary
        start_value:
          type: number
          format: float
        end_value:
          type: number
          format: float
    createRangeTask:
      title: Create range text task
      description: Request to creation task with plain text
      required:
        - num_of_task
        - image_of_task
        - start_value
        - end_value
        - variant_id
      properties:
        variant_id:
          type: integer
        num_of_task:
          type: integer
        image_of_task:
          type: string
          format: binary
        start_value:
          type: number
          format: float
        end_value:
          type: number
          format: float
    rangeTaskInfo:
      title: Range task info
      description: Request to creation task with plain text
      required:
        - task_id
        - num_of_task
        - image_of_task
        - start_value
        - end_value
        - variant_id
      properties:
        variant_id:
          type: integer
        task_id:
          type: integer
        num_of_task:
          type: integer
        image_of_task:
          type: string
          format: binary
        start_value:
          type: number
          format: float
        end_value:
          type: number
          format: float
    answerRangeTaskInfo:
      title: Range task answer
      description: Request to get correct answer for range choice task
      required:
        - start_value
        - end_value
      properties:
        start_value:
          type: number
          format: float
        end_value:
          type: number
          format: float
    removeMultipleTask:
      title: Remove multiple choice task
      description: Request to remove task with multiple choice
    multipleTaskInfoUpdate:
      title: Edit multiple text task
      description: Request to creation task with plain text
      properties:
        variant_id:
          type: integer
        num_of_task:
          type: integer
        image_of_task:
          type: string
          format: binary
        correct_answer:
          type: string
    createMultipleTask:
      title: Create multiple text task
      description: Request to creation task with plain text
      required:
        - num_of_task
        - image_of_task
        - correct_answer
        - variant_id
      properties:
        variant_id:
          type: integer
        num_of_task:
          type: integer
        image_of_task:
          type: string
          format: binary
        correct_answer:
          type: string
    multipleTaskInfo:
      title: Multiple text task info
      description: Request to creation task with plain text
      required:
        - task_id
        - num_of_task
        - image_of_task
        - correct_answer
        - variant_id
      properties:
        variant_id:
          type: integer
        task_id:
          type: integer
        num_of_task:
          type: integer
        image_of_task:
          type: string
          format: binary
        correct_answer:
          type: string
    answerMultipleTaskInfo:
      title: Multiple task answer
      description: Request to get correct answer for multiple choice task
      required:
        - correct_answer
      properties:
        correct_answer:
          type: string
    usersInContest:
      title: Show users in contest
      description: Request to show users in contest
      required:
        - user_id
        - contest_id
        - variant_id
        - user_status
      properties:
        user_id:
          type: integer
        contest_id:
          type: integer
        variant_id:
          type: integer
        user_status:
          type: string
    updateContest:
      title: Add or remove user to contest
      description: Request to add user to contest
      required:
        - contest_id
        - variant_id
      properties:
        contest_id:
          type: integer
        variant_id:
          type: integer
    stageInfoUpdate:
      title: Edit stage common info
      description: Request to edit stage
      properties:
        stage_name:
          type: string
        composite_contest_id:
          type: integer
        next_stage_condition:
          type: string
    removeStage:
      title: Remove stage
      description: Request to remove stage
      required:
        - composite_contest_id
      properties:
        composite_contest_id:
          type: integer
    contestInfoUpdate:
      title: Edit contest common info
      description: Request to creation contest
      properties:
        description:
          type: string
        rules:
          type: string
        winning_condition:
          type: string
        laureate_condition:
          type: string
        certificate_template:
          type: string
        visibility:
          type: boolean
    removeContest:
      title: Remove contest
      description: Request to remove contest
    removeVariant:
      title: Remove variant
      description: Request to variant removing
    variantInfoUpdate:
      title: Edit variant
      description: Request to edit variant
      properties:
        contest_id:
          type: integer
        variant_number:
          type: integer
        variant_description:
          type: string
    createOlympiad:
    olympiadInfo:
    olympiadInfoUpdate:
    removeOlympiad:

