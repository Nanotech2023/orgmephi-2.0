openapi: 3.0.0
info:
  title: User service API
  description: API description in Markdown.
  version: 1.0.0

paths:
  /register:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registration'
      summary: Registers a new user.
      responses:
        '200':
          description: OK
        #4xx type errors, TODO: specify exact error codes
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /auth:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authentication'
      summary: Authenticates a user.
      responses:
        '200':
          description: OK
          headers:
            Set-Cookie:
              schema:
                type: string
                example: access_token_cookie=eyJ0eXAi...
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authResponse'

        #4xx type errors, TODO: specify exact error codes
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /info/universities:
    get:
      summary: Get known university list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUniversitiesResponse'

components:
  schemas:
    errorResponse:
      title: 'Error response'
      description: 'Common response with error message'
      required:
        - error_msg
      properties:
        error_msg:
          type: string
    registration:
      title: 'Registration request info'
      required:
        - auth_info
        - personal_info
        - register_type
      properties:
        auth_info:
          $ref: '#/components/schemas/registerAuthInfo'
        personal_info:
          $ref: '#/components/schemas/personalInfo'
        register_type:
          title: 'User type'
          type: string
          enum: ['PreUniversity', 'Enrollee', 'School', 'University']
        student_info:
          $ref: '#/components/schemas/studentInfo'
        register_confirm:
          $ref: '#/components/schemas/registerConfirm'
    registerAuthInfo:
      title: 'Authentication info'
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
          format: password
    personalInfo:
      title: 'Personal info'
      required:
        - first_name
        - second_name
        - middle_name
        - date_of_birth
      properties:
        first_name:
          type: string
        second_name:
          type: string
        middle_name:
          type: string
        date_of_birth:
          type: string
          format: date
    studentInfo:
      title: 'Student info'
      required:
        - phone_number
        - university
        - grade
        - university_country
        - citizenship
        - region
        - city
      properties:
        phone_number:
          type: string
        university:
          type: string
        grade:
          type: integer
          minimum: 1
          maximum: 5
        university_country:
          type: string
        citizenship:
          type: string
        region:
          type: string
        city:
          type: string
    registerConfirm:
      title: 'Confirm registration info'
      description: 'Used to register with a one-time password'
      required:
        - registration_number
        - one_time_password
      properties:
        registration_number:
          type: string
        one_time_password:
          type: string
          format: password
    authentication:
      title: 'Authentication request info'
      required:
        - auth_credentials
      properties:
        auth_credentials:
          $ref: '#/components/schemas/authCredentials'
    authCredentials:
      title: 'Authentication credentials'
      required:
        - username #Email for external users, username for MEPhI students
        - password
      properties:
        email:
          type: string
        password:
          type: string
          format: password
    authResponse:
      title: 'Authentication response'
      required:
        - csrf_access_token
      properties:
        csrf_access_token:
          title: CSRF token
          type: string
    getUniversitiesResponse:
      title: 'Get university list response'
      required:
        - university_list
      properties:
        university_list:
          type: array
          items:
            type: string