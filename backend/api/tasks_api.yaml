components:
  schemas:
    AllBaseContestResponseTaskUnauthorized:
      properties:
        olympiad_list:
          items:
            $ref: '#/components/schemas/BaseContest'
          type: array
      required:
      - olympiad_list
      type: object
    AllLocationResponseTaskUnauthorized:
      properties:
        locations:
          items:
            $ref: '#/components/schemas/OlympiadLocation'
          type: array
      required:
      - locations
      type: object
    AllOlympiadTypesResponseTaskUnauthorized:
      properties:
        olympiad_types:
          items:
            $ref: '#/components/schemas/OlympiadType'
          type: array
      required:
      - olympiad_types
      type: object
    AllOlympiadsResponseTaskCreator:
      properties:
        olympiad_list:
          items:
            $ref: '#/components/schemas/Contest'
          type: array
      required:
      - olympiad_list
      type: object
    AllOlympiadsResponseTaskUnauthorized:
      properties:
        contest_list:
          items:
            $ref: '#/components/schemas/Contest'
          type: array
      required:
      - contest_list
      type: object
    AllStagesResponseTaskUnauthorized:
      properties:
        stages_list:
          items:
            $ref: '#/components/schemas/Stage'
          type: array
      required:
      - stages_list
      type: object
    AllTargetClassesRequestTaskUnauthorized:
      properties:
        target_classes:
          items:
            $ref: '#/components/schemas/TargetClass'
          type: array
      required:
      - target_classes
      type: object
    AllTaskResponseTaskParticipant:
      properties:
        tasks_list:
          items:
            $ref: '#/components/schemas/TaskForUserResponseTaskParticipant'
          type: array
      required:
      - tasks_list
      type: object
    AllTasksResponseTaskCreator:
      properties:
        tasks_list:
          items:
            $ref: '#/components/schemas/Task'
          type: array
      required:
      - tasks_list
      type: object
    AllVariantsResponseTaskCreator:
      properties:
        variants_list:
          items:
            $ref: '#/components/schemas/Variant'
          type: array
      required:
      - variants_list
      type: object
    AnswersInTaskRequestTaskCreator:
      properties:
        answer:
          maxLength: 1024
          type: string
        is_right_answer:
          type: boolean
      required:
      - answer
      - is_right_answer
      type: object
    AnswersInTaskRequestTaskEditor:
      properties:
        answer:
          maxLength: 1024
          type: string
        is_right_answer:
          type: boolean
      required:
      - answer
      - is_right_answer
      type: object
    AnswersInTaskRequestTaskParticipant:
      properties:
        answer:
          maxLength: 1024
          type: string
      required:
      - answer
      type: object
    BaseContest:
      properties:
        base_contest_id:
          readOnly: true
          type: integer
        description:
          maxLength: 1024
          type: string
        diploma_1_condition:
          type: number
        diploma_2_condition:
          type: number
        diploma_3_condition:
          type: number
        level:
          enum:
          - '1'
          - '2'
          - '3'
          - No level
          type: string
        name:
          type: string
        olympiad_type_id:
          type: integer
        rules:
          maxLength: 1024
          type: string
        subject:
          enum:
          - Math
          - Physics
          - Informatics
          - Natural Sciences
          - Engineering Sciences
          - Other
          type: string
        target_classes:
          items:
            $ref: '#/components/schemas/TargetClass'
          type: array
        winner_1_condition:
          type: number
        winner_2_condition:
          type: number
        winner_3_condition:
          type: number
      type: object
    BaseOlympiadIdResponseTaskCreator:
      properties:
        base_contest_id:
          type: integer
      required:
      - base_contest_id
      type: object
    BaseOlympiadResponseTaskCreator:
      properties:
        base_contest_id:
          readOnly: true
          type: integer
        description:
          maxLength: 1024
          type: string
        diploma_1_condition:
          type: number
        diploma_2_condition:
          type: number
        diploma_3_condition:
          type: number
        level:
          enum:
          - '1'
          - '2'
          - '3'
          - No level
          type: string
        name:
          type: string
        olympiad_type_id:
          type: integer
        rules:
          maxLength: 1024
          type: string
        subject:
          enum:
          - Math
          - Physics
          - Informatics
          - Natural Sciences
          - Engineering Sciences
          - Other
          type: string
        target_classes:
          items:
            $ref: '#/components/schemas/TargetClass'
          type: array
        winner_1_condition:
          type: number
        winner_2_condition:
          type: number
        winner_3_condition:
          type: number
      type: object
    ChangeUsersLocationInContestRequestTaskControlUsers:
      properties:
        location_id:
          type: integer
        users_id:
          items:
            type: integer
          type: array
      required:
      - users_id
      type: object
    CompositeContest:
      properties:
        base_contest:
          allOf:
          - $ref: '#/components/schemas/BaseContest'
          readOnly: true
        contest_id:
          readOnly: true
          type: integer
        holding_type:
          enum:
          - OfflineContest
          - OnLineContest
          type: string
        stages:
          items:
            $ref: '#/components/schemas/Stage'
          readOnly: true
          type: array
        visibility:
          type: boolean
      required:
      - base_contest
      - contest_id
      - holding_type
      - stages
      - visibility
      type: object
    Contest:
      discriminator:
        mapping:
          CompositeContest: '#/components/schemas/CompositeContest'
          SimpleContest: '#/components/schemas/SimpleContest'
        propertyName: composite_type
      oneOf:
      - $ref: '#/components/schemas/SimpleContest'
      - $ref: '#/components/schemas/CompositeContest'
    ContestIdResponseTaskCreator:
      properties:
        contest_id:
          type: integer
      required:
      - contest_id
      type: object
    ContestResponseTaskCreator:
      properties:
        contest_duration:
          type: integer
          x-unit: seconds
        contest_id:
          type: integer
        end_date:
          format: date-time
          type: string
        end_of_enroll_date:
          format: date-time
          type: string
        holding_type:
          enum:
          - OfflineContest
          - OnLineContest
          type: string
        location:
          maxLength: 128
          type: string
        previous_contest_id:
          type: integer
        previous_participation_condition:
          enum:
          - Winner 1
          - Winner 2
          - Winner 3
          - Diploma 1
          - Diploma 2
          - Diploma 3
          - Participant
          type: string
        result_publication_date:
          format: date-time
          type: string
        start_date:
          format: date-time
          type: string
        visibility:
          type: boolean
      required:
      - contest_id
      - visibility
      type: object
    CreateBaseOlympiadRequestTaskCreator:
      properties:
        description:
          maxLength: 1024
          type: string
        diploma_1_condition:
          maximum: 1.0
          minimum: 0.0
          type: number
        diploma_2_condition:
          maximum: 1.0
          minimum: 0.0
          type: number
        diploma_3_condition:
          maximum: 1.0
          minimum: 0.0
          type: number
        level:
          enum:
          - '1'
          - '2'
          - '3'
          - No level
          type: string
        name:
          maxLength: 128
          type: string
        olympiad_type_id:
          type: integer
        rules:
          maxLength: 1024
          type: string
        subject:
          enum:
          - Math
          - Physics
          - Informatics
          - Natural Sciences
          - Engineering Sciences
          - Other
          type: string
        winner_1_condition:
          maximum: 1.0
          minimum: 0.0
          type: number
        winner_2_condition:
          maximum: 1.0
          minimum: 0.0
          type: number
        winner_3_condition:
          maximum: 1.0
          minimum: 0.0
          type: number
      required:
      - description
      - diploma_1_condition
      - diploma_2_condition
      - diploma_3_condition
      - level
      - name
      - olympiad_type_id
      - rules
      - subject
      - winner_1_condition
      - winner_2_condition
      - winner_3_condition
      type: object
    CreateCompositeContestRequestTaskCreator:
      properties:
        holding_type:
          enum:
          - OfflineContest
          - OnLineContest
          type: string
        visibility:
          type: boolean
      required:
      - holding_type
      - visibility
      type: object
    CreateMultipleRequestTaskCreator:
      properties:
        answers:
          items:
            $ref: '#/components/schemas/AnswersInTaskRequestTaskCreator'
          type: array
        num_of_task:
          type: integer
        show_answer_after_contest:
          type: boolean
        task_points:
          type: integer
      required:
      - answers
      - num_of_task
      type: object
    CreateOlympiadTypeRequestTaskAdmin:
      properties:
        olympiad_type:
          maxLength: 32
          type: string
      required:
      - olympiad_type
      type: object
    CreateOnlineLocationRequestTaskAdmin:
      properties:
        url:
          example: https://www.example.com
          format: url
          maxLength: 128
          type: string
      required:
      - url
      type: object
    CreateOtherLocationRequestTaskAdmin:
      properties:
        country_name:
          maxLength: 32
          type: string
        location:
          maxLength: 256
          type: string
      required:
      - country_name
      - location
      type: object
    CreatePlainRequestTaskCreator:
      properties:
        answer_type:
          enum:
          - File
          - Text
          type: string
        num_of_task:
          type: integer
        recommended_answer:
          maxLength: 1024
          type: string
        show_answer_after_contest:
          type: boolean
        task_points:
          type: integer
      required:
      - num_of_task
      - recommended_answer
      type: object
    CreateRangeRequestTaskCreator:
      properties:
        end_value:
          type: number
        num_of_task:
          type: integer
        show_answer_after_contest:
          type: boolean
        start_value:
          type: number
        task_points:
          type: integer
      required:
      - end_value
      - num_of_task
      - start_value
      type: object
    CreateRussiaLocationRequestTaskAdmin:
      properties:
        address:
          maxLength: 256
          type: string
        city_name:
          maxLength: 32
          type: string
        region_name:
          maxLength: 32
          type: string
      required:
      - address
      - city_name
      - region_name
      type: object
    CreateSimpleContestRequestTaskCreator:
      properties:
        contest_duration:
          type: integer
          x-unit: seconds
        end_date:
          format: date-time
          type: string
        end_of_enroll_date:
          format: date-time
          type: string
        holding_type:
          enum:
          - OfflineContest
          - OnLineContest
          type: string
        previous_contest_id:
          type: integer
        previous_participation_condition:
          enum:
          - Winner 1
          - Winner 2
          - Winner 3
          - Diploma 1
          - Diploma 2
          - Diploma 3
          - Participant
          type: string
        regulations:
          maxLength: 1024
          type: string
        result_publication_date:
          format: date-time
          type: string
        stage_id:
          type: integer
        start_date:
          format: date-time
          type: string
        visibility:
          type: boolean
      required:
      - end_date
      - holding_type
      - regulations
      - start_date
      - visibility
      type: object
    CreateStageRequestTaskCreator:
      properties:
        condition:
          enum:
          - 'No'
          - And
          - Or
          type: string
        stage_name:
          maxLength: 32
          type: string
        stage_num:
          type: integer
        this_stage_condition:
          maxLength: 1024
          type: string
      required:
      - condition
      - stage_name
      - stage_num
      - this_stage_condition
      type: object
    CreateVariantRequestTaskCreator:
      properties:
        variant_description:
          maxLength: 1024
          type: string
      required:
      - variant_description
      type: object
    EnrollRequestTaskParticipant:
      properties:
        location_id:
          type: integer
      type: object
    FilterSimpleContestResponse:
      properties:
        contest_list:
          items:
            $ref: '#/components/schemas/SimpleContest'
          type: array
        count:
          type: integer
      type: object
    FilterSimpleContestResponseTaskParticipant:
      properties:
        contest_list:
          items:
            $ref: '#/components/schemas/SimpleContestWithFlagResponseTaskParticipant'
          type: array
        count:
          type: integer
      type: object
    LocationResponseTaskAdmin:
      properties:
        location_id:
          type: integer
      required:
      - location_id
      type: object
    MultipleChoiceTask:
      properties:
        answers:
          nullable: true
          type: string
        num_of_task:
          type: integer
        show_answer_after_contest:
          nullable: true
          type: boolean
        task_id:
          readOnly: true
          type: integer
        task_points:
          nullable: true
          type: integer
      required:
      - task_id
      type: object
    OlympiadLocation:
      discriminator:
        mapping:
          OnlineOlympiadLocation: '#/components/schemas/OnlineOlympiadLocation'
          OtherOlympiadLocation: '#/components/schemas/OtherOlympiadLocation'
          RussiaOlympiadLocation: '#/components/schemas/RussiaOlympiadLocation'
        propertyName: location_type
      oneOf:
      - $ref: '#/components/schemas/OnlineOlympiadLocation'
      - $ref: '#/components/schemas/RussiaOlympiadLocation'
      - $ref: '#/components/schemas/OtherOlympiadLocation'
    OlympiadType:
      properties:
        olympiad_type:
          maxLength: 32
          type: string
        olympiad_type_id:
          readOnly: true
          type: integer
      required:
      - olympiad_type
      type: object
    OlympiadTypeResponseTaskAdmin:
      properties:
        olympiad_type_id:
          type: integer
      required:
      - olympiad_type_id
      type: object
    OnlineOlympiadLocation:
      properties:
        location_id:
          readOnly: true
          type: integer
        url:
          nullable: true
          type: string
      required:
      - url
      type: object
    OtherOlympiadLocation:
      properties:
        country:
          type: string
        country_name:
          nullable: true
          type: string
        location:
          nullable: true
          type: string
        location_id:
          readOnly: true
          type: integer
      required:
      - country
      - location
      type: object
    PlainTask:
      properties:
        answer_type:
          enum:
          - File
          - Text
          type: string
        num_of_task:
          type: integer
        recommended_answer:
          maxLength: 1024
          type: string
        show_answer_after_contest:
          nullable: true
          type: boolean
        task_id:
          readOnly: true
          type: integer
        task_points:
          nullable: true
          type: integer
      required:
      - num_of_task
      - recommended_answer
      - task_id
      type: object
    RangeTask:
      properties:
        end_value:
          type: number
        num_of_task:
          type: integer
        show_answer_after_contest:
          nullable: true
          type: boolean
        start_value:
          type: number
        task_id:
          readOnly: true
          type: integer
        task_points:
          nullable: true
          type: integer
      required:
      - end_value
      - num_of_task
      - start_value
      - task_id
      type: object
    RussiaOlympiadLocation:
      properties:
        address:
          nullable: true
          type: string
        city:
          properties:
            name:
              type: string
            region_name:
              type: string
          required:
          - name
          - region_name
          type: object
        city_name:
          nullable: true
          type: string
        location_id:
          readOnly: true
          type: integer
        region_name:
          nullable: true
          type: string
      required:
      - address
      - city_name
      - region_name
      type: object
    SimpleContest:
      properties:
        base_contest:
          allOf:
          - $ref: '#/components/schemas/BaseContest'
          readOnly: true
        contest_duration:
          type: integer
          x-unit: seconds
        contest_id:
          readOnly: true
          type: integer
        end_date:
          format: date-time
          nullable: true
          type: string
        end_of_enroll_date:
          format: date-time
          nullable: true
          type: string
        holding_type:
          enum:
          - OfflineContest
          - OnLineContest
          type: string
        locations:
          items:
            $ref: '#/components/schemas/OlympiadLocation'
          type: array
        previous_contest_id:
          nullable: true
          type: integer
        previous_participation_condition:
          enum:
          - Winner 1
          - Winner 2
          - Winner 3
          - Diploma 1
          - Diploma 2
          - Diploma 3
          - Participant
          type: string
        regulations:
          maxLength: 1024
          nullable: true
          type: string
        result_publication_date:
          format: date-time
          nullable: true
          type: string
        start_date:
          format: date-time
          nullable: true
          type: string
        status:
          enum:
          - Will start soon
          - In progress
          - Finished
          type: string
        target_classes:
          items:
            $ref: '#/components/schemas/TargetClass'
          type: array
        tasks_number:
          type: integer
        total_points:
          type: integer
        visibility:
          type: boolean
      required:
      - base_contest
      - contest_duration
      - contest_id
      - end_date
      - end_of_enroll_date
      - holding_type
      - locations
      - previous_participation_condition
      - result_publication_date
      - start_date
      - visibility
      type: object
    SimpleContestWithFlagResponseTaskParticipant:
      properties:
        contest:
          allOf:
          - $ref: '#/components/schemas/SimpleContest'
          readOnly: true
        enrolled:
          type: boolean
      required:
      - enrolled
      type: object
    Stage:
      properties:
        condition:
          enum:
          - 'No'
          - And
          - Or
          type: string
        contests:
          items:
            $ref: '#/components/schemas/SimpleContest'
          type: array
        olympiad_id:
          nullable: true
          type: integer
        stage_id:
          readOnly: true
          type: integer
        stage_name:
          maxLength: 32
          type: string
        stage_num:
          type: integer
        this_stage_condition:
          maxLength: 1024
          type: string
      required:
      - stage_name
      - stage_num
      - this_stage_condition
      type: object
    StageIdResponseTaskCreator:
      properties:
        stage_id:
          type: integer
      required:
      - stage_id
      type: object
    StageResponseTaskCreator:
      properties:
        condition:
          enum:
          - 'No'
          - And
          - Or
          type: string
        contests:
          items:
            $ref: '#/components/schemas/SimpleContest'
          type: array
        stage_id:
          readOnly: true
          type: integer
        stage_name:
          maxLength: 32
          type: string
        stage_num:
          type: integer
        this_stage_condition:
          maxLength: 1024
          type: string
      required:
      - stage_name
      - stage_num
      - this_stage_condition
      type: object
    TargetClass:
      properties:
        target_class:
          maxLength: 32
          type: string
        target_class_id:
          readOnly: true
          type: integer
      required:
      - target_class
      type: object
    Task:
      discriminator:
        mapping:
          MultipleChoiceTask: '#/components/schemas/MultipleChoiceTask'
          PlainTask: '#/components/schemas/PlainTask'
          RangeTask: '#/components/schemas/RangeTask'
        propertyName: task_type
      oneOf:
      - $ref: '#/components/schemas/PlainTask'
      - $ref: '#/components/schemas/RangeTask'
      - $ref: '#/components/schemas/MultipleChoiceTask'
    TaskForUserResponseTaskParticipant:
      properties:
        answers:
          items:
            $ref: '#/components/schemas/AnswersInTaskRequestTaskParticipant'
          type: array
        task_id:
          type: integer
        task_type:
          enum:
          - PlainTask
          - RangeTask
          - MultipleChoiceTask
          - BaseTask
          type: string
      required:
      - task_id
      type: object
    TaskIdResponseTaskCreator:
      properties:
        task_id:
          type: integer
      required:
      - task_id
      type: object
    TaskResponseTaskCreator:
      properties:
        answers:
          items:
            $ref: '#/components/schemas/AnswersInTaskRequestTaskCreator'
          type: array
        end_value:
          type: number
        num_of_task:
          type: integer
        recommended_answer:
          maxLength: 1024
          type: string
        show_answer_after_contest:
          type: boolean
        start_value:
          type: number
        task_id:
          type: integer
        task_points:
          type: integer
      required:
      - num_of_task
      - task_id
      type: object
    UpdateBaseOlympiadRequestTaskEditor:
      properties:
        description:
          maxLength: 1024
          type: string
        diploma_1_condition:
          maximum: 1.0
          minimum: 0.0
          type: number
        diploma_2_condition:
          maximum: 1.0
          minimum: 0.0
          type: number
        diploma_3_condition:
          maximum: 1.0
          minimum: 0.0
          type: number
        level:
          enum:
          - '1'
          - '2'
          - '3'
          - No level
          type: string
        name:
          maxLength: 128
          type: string
        olympiad_type_id:
          type: integer
        rules:
          maxLength: 1024
          type: string
        subject:
          enum:
          - Math
          - Physics
          - Informatics
          - Natural Sciences
          - Engineering Sciences
          - Other
          type: string
        winner_1_condition:
          maximum: 1.0
          minimum: 0.0
          type: number
        winner_2_condition:
          maximum: 1.0
          minimum: 0.0
          type: number
        winner_3_condition:
          maximum: 1.0
          minimum: 0.0
          type: number
      type: object
    UpdateContestRequestTaskEditor:
      properties:
        contest_duration:
          type: integer
          x-unit: seconds
        end_date:
          format: date-time
          type: string
        end_of_enroll_date:
          format: date-time
          type: string
        holding_type:
          enum:
          - OfflineContest
          - OnLineContest
          type: string
        previous_contest_id:
          type: integer
        previous_participation_condition:
          enum:
          - Winner 1
          - Winner 2
          - Winner 3
          - Diploma 1
          - Diploma 2
          - Diploma 3
          - Participant
          type: string
        regulations:
          maxLength: 1024
          type: string
        result_publication_date:
          format: date-time
          type: string
        start_date:
          format: date-time
          type: string
        visibility:
          type: boolean
      type: object
    UpdateLocationOfContestRequestTaskEditor:
      properties:
        locations:
          items:
            type: integer
          type: array
      required:
      - locations
      type: object
    UpdateMultipleRequestTaskEditor:
      properties:
        answers:
          items:
            $ref: '#/components/schemas/AnswersInTaskRequestTaskEditor'
          type: array
        num_of_task:
          type: integer
        show_answer_after_contest:
          type: boolean
        task_points:
          type: integer
      type: object
    UpdatePlainRequestTaskEditor:
      properties:
        answer_type:
          enum:
          - File
          - Text
          type: string
        num_of_task:
          type: integer
        recommended_answer:
          maxLength: 1024
          type: string
        show_answer_after_contest:
          type: boolean
        task_points:
          type: integer
      type: object
    UpdatePreviousContestRequestTaskEditor:
      properties:
        previous_contest_id:
          type: integer
        previous_participation_condition:
          enum:
          - Winner 1
          - Winner 2
          - Winner 3
          - Diploma 1
          - Diploma 2
          - Diploma 3
          - Participant
          type: string
      required:
      - previous_contest_id
      - previous_participation_condition
      type: object
    UpdateRangeRequestTaskEditor:
      properties:
        end_value:
          type: number
        num_of_task:
          type: integer
        show_answer_after_contest:
          type: boolean
        start_value:
          type: number
        task_points:
          type: integer
      type: object
    UpdateStageRequestTaskEditor:
      properties:
        condition:
          enum:
          - 'No'
          - And
          - Or
          type: string
        stage_name:
          maxLength: 32
          type: string
        stage_num:
          type: integer
        this_stage_condition:
          maxLength: 1024
          type: string
      type: object
    UpdateTargetClassesOfContestRequestTaskEditor:
      properties:
        target_classes_ids:
          items:
            type: integer
          type: array
      required:
      - target_classes_ids
      type: object
    UpdateUserInContestRequestTaskControlUsers:
      properties:
        check_condition:
          type: boolean
        location_id:
          type: integer
        show_results_to_user:
          type: boolean
        user_status:
          enum:
          - Winner 1
          - Winner 2
          - Winner 3
          - Diploma 1
          - Diploma 2
          - Diploma 3
          - Participant
          type: string
        users_id:
          items:
            type: integer
          type: array
      required:
      - users_id
      type: object
    UpdateVariantRequestTaskEditor:
      properties:
        variant_description:
          maxLength: 1024
          type: string
        variant_number:
          type: integer
      type: object
    UserInContest:
      properties:
        show_results_to_user:
          nullable: true
          type: boolean
        user_id:
          readOnly: true
          type: integer
        user_status:
          enum:
          - Winner 1
          - Winner 2
          - Winner 3
          - Diploma 1
          - Diploma 2
          - Diploma 3
          - Participant
          type: string
        variant_id:
          nullable: true
          readOnly: true
          type: integer
      required:
      - user_id
      - user_status
      type: object
    UsersResponseTaskControlUsers:
      properties:
        user_list:
          items:
            $ref: '#/components/schemas/UserInContest'
          type: array
      required:
      - user_list
      type: object
    Variant:
      properties:
        contest_id:
          nullable: true
          type: integer
        variant_description:
          maxLength: 1024
          nullable: true
          type: string
        variant_id:
          readOnly: true
          type: integer
        variant_number:
          nullable: true
          type: integer
      required:
      - variant_description
      - variant_number
      type: object
    VariantIdResponseTaskCreator:
      properties:
        variant_id:
          type: integer
      required:
      - variant_id
      type: object
    VariantResponseTaskCreator:
      properties:
        variant_description:
          maxLength: 1024
          nullable: true
          type: string
        variant_id:
          readOnly: true
          type: integer
        variant_number:
          nullable: true
          type: integer
      required:
      - variant_description
      - variant_number
      type: object
    VariantWithCompletedTasksCountTaskParticipant:
      properties:
        completed_task_count:
          type: integer
        variant:
          $ref: '#/components/schemas/Variant'
      required:
      - completed_task_count
      type: object
  securitySchemes:
    CSRFAccessToken:
      in: header
      name: X-CSRF-TOKEN
      type: apiKey
    CSRFRefreshToken:
      in: header
      name: X-CSRF-TOKEN
      type: apiKey
    JWTAccessToken:
      in: cookie
      name: access_token_cookie
      type: apiKey
    JWTRefreshToken:
      in: cookie
      name: refresh_token_cookie
      type: apiKey
info:
  title: aggregate_contest_tasks
  version: 1.0.0
openapi: 3.0.2
paths:
  /tasks/creator/base_olympiad/create:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBaseOlympiadRequestTaskCreator'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseOlympiadIdResponseTaskCreator'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/creator/base_olympiad/{id_base_olympiad}/olympiad/create_simple:
    post:
      parameters:
      - description: ID of the base olympiad
        in: path
        name: id_base_olympiad
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSimpleContestRequestTaskCreator'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContestIdResponseTaskCreator'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/creator/base_olympiad/{id_base_olympiad}/olympiad/create_composite:
    post:
      parameters:
      - description: ID of the base olympiad
        in: path
        name: id_base_olympiad
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompositeContestRequestTaskCreator'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContestIdResponseTaskCreator'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/creator/olympiad/{id_olympiad}/stage/create:
    post:
      parameters:
      - description: ID of the olympiad
        in: path
        name: id_olympiad
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStageRequestTaskCreator'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageIdResponseTaskCreator'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/creator/olympiad/{id_olympiad}/stage/{id_stage}/contest/all:
    get:
      parameters:
      - description: ID of the olympiad
        in: path
        name: id_olympiad
        required: true
        schema:
          type: integer
      - description: ID of the stage
        in: path
        name: id_stage
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllOlympiadsResponseTaskCreator'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/creator/contest/{id_contest}/variant/create:
    post:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVariantRequestTaskCreator'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariantIdResponseTaskCreator'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/creator/contest/{id_contest}/variant/{variant_num}:
    get:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      - description: Num of the variant
        in: path
        name: variant_num
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariantResponseTaskCreator'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/creator/contest/{id_contest}/variant/all:
    get:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllVariantsResponseTaskCreator'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/creator/contest/{id_contest}/variant/{id_variant}/task/create_plain:
    post:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      - description: ID of the variant
        in: path
        name: id_variant
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlainRequestTaskCreator'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskIdResponseTaskCreator'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/creator/contest/{id_contest}/variant/{id_variant}/task/create_range:
    post:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      - description: ID of the variant
        in: path
        name: id_variant
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRangeRequestTaskCreator'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskIdResponseTaskCreator'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/creator/contest/{id_contest}/variant/{id_variant}/task/create_multiple:
    post:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      - description: ID of the variant
        in: path
        name: id_variant
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMultipleRequestTaskCreator'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskIdResponseTaskCreator'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/creator/contest/{id_contest}/variant/{id_variant}/task/{id_task}:
    get:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      - description: ID of the variant
        in: path
        name: id_variant
        required: true
        schema:
          type: integer
      - description: ID of the task
        in: path
        name: id_task
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponseTaskCreator'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/creator/contest/{id_contest}/variant/{id_variant}/task/all:
    get:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      - description: ID of the variant
        in: path
        name: id_variant
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllTasksResponseTaskCreator'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/creator/contest/{id_contest}/variant/{id_variant}/tasks/{id_task}/image:
    get:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      - description: ID of the variant
        in: path
        name: id_variant
        required: true
        schema:
          type: integer
      - description: ID of the task
        in: path
        name: id_task
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            image/jpeg:
              schema:
                format: binary
                type: string
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/editor/base_olympiad/{id_base_olympiad}/upload_certificate:
    post:
      parameters:
      - description: Id of the olympiad
        in: path
        name: id_base_olympiad
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '404':
          description: Base contest not found
        '409':
          description: Wrong value
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/editor/base_olympiad/{id_base_olympiad}/remove:
    post:
      parameters:
      - description: ID of the base olympiad
        in: path
        name: id_base_olympiad
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
        '403':
          description: Invalid role of current user
        '404':
          description: Group not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/editor/base_olympiad/{id_base_olympiad}:
    patch:
      parameters:
      - description: ID of the base olympiad
        in: path
        name: id_base_olympiad
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBaseOlympiadRequestTaskEditor'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseOlympiadResponseTaskCreator'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/editor/base_olympiad/{id_base_olympiad}/olympiad/{id_olympiad}/remove:
    post:
      parameters:
      - description: ID of the base olympiad
        in: path
        name: id_base_olympiad
        required: true
        schema:
          type: integer
      - description: ID of the olympiad
        in: path
        name: id_olympiad
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
        '403':
          description: Invalid role of current user
        '404':
          description: Olympiad not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/editor/base_olympiad/{id_base_olympiad}/olympiad/{id_olympiad}:
    patch:
      parameters:
      - description: ID of the base olympiad
        in: path
        name: id_base_olympiad
        required: true
        schema:
          type: integer
      - description: ID of the olympiad
        in: path
        name: id_olympiad
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContestRequestTaskEditor'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContestResponseTaskCreator'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/editor/olympiad/{id_olympiad}/stage/{id_stage}/remove:
    post:
      parameters:
      - description: ID of the olympiad
        in: path
        name: id_olympiad
        required: true
        schema:
          type: integer
      - description: ID of the stage
        in: path
        name: id_stage
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
        '403':
          description: Invalid role of current user
        '404':
          description: Olympiad not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/editor/olympiad/{id_olympiad}/stage/{id_stage}:
    patch:
      parameters:
      - description: ID of the olympiad
        in: path
        name: id_olympiad
        required: true
        schema:
          type: integer
      - description: ID of the stage
        in: path
        name: id_stage
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStageRequestTaskEditor'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageResponseTaskCreator'
          description: OK
        '403':
          description: Invalid role of current user
        '404':
          description: Stage not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/editor/olympiad/{id_olympiad}/stage/{id_stage}/contest/{id_contest}/remove:
    post:
      parameters:
      - description: ID of the olympiad
        in: path
        name: id_olympiad
        required: true
        schema:
          type: integer
      - description: ID of the stage
        in: path
        name: id_stage
        required: true
        schema:
          type: integer
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
        '403':
          description: Invalid role of current user
        '404':
          description: Olympiad not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/editor/olympiad/{id_olympiad}/stage/{id_stage}/contest/{id_contest}/add_previous:
    patch:
      parameters:
      - description: ID of the olympiad
        in: path
        name: id_olympiad
        required: true
        schema:
          type: integer
      - description: ID of the stage
        in: path
        name: id_stage
        required: true
        schema:
          type: integer
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePreviousContestRequestTaskEditor'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/editor/contest/{id_contest}/variant/{id_variant}/remove:
    post:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      - description: ID of the variant
        in: path
        name: id_variant
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
        '403':
          description: Invalid role of current user
        '404':
          description: Olympiad not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/editor/contest/{id_contest}/variant/{variant_num}:
    patch:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      - description: Num of the variant
        in: path
        name: variant_num
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVariantRequestTaskEditor'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariantResponseTaskCreator'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/editor/contest/{id_contest}/variant/{id_variant}/task/{id_task}/upload_image:
    post:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      - description: ID of the variant
        in: path
        name: id_variant
        required: true
        schema:
          type: integer
      - description: ID of the task
        in: path
        name: id_task
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '404':
          description: Base contest not found
        '409':
          description: Wrong value
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/editor/contest/{id_contest}/variant/{id_variant}/task/{id_task}/remove:
    post:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      - description: ID of the variant
        in: path
        name: id_variant
        required: true
        schema:
          type: integer
      - description: ID of the task
        in: path
        name: id_task
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
        '403':
          description: Invalid role of current user
        '404':
          description: Olympiad not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/editor/contest/{id_contest}/variant/{id_variant}/task/{id_task}/plain:
    patch:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      - description: ID of the variant
        in: path
        name: id_variant
        required: true
        schema:
          type: integer
      - description: ID of the task
        in: path
        name: id_task
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlainRequestTaskEditor'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponseTaskCreator'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/editor/contest/{id_contest}/variant/{id_variant}/task/{id_task}/range:
    patch:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      - description: ID of the variant
        in: path
        name: id_variant
        required: true
        schema:
          type: integer
      - description: ID of the task
        in: path
        name: id_task
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRangeRequestTaskEditor'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponseTaskCreator'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/editor/contest/{id_contest}/variant/{id_variant}/task/{id_task}/multiple:
    patch:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      - description: ID of the variant
        in: path
        name: id_variant
        required: true
        schema:
          type: integer
      - description: ID of the task
        in: path
        name: id_task
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMultipleRequestTaskEditor'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponseTaskCreator'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/editor/contest/{id_contest}/add_location:
    post:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLocationOfContestRequestTaskEditor'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/editor/contest/{id_contest}/remove_location:
    post:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLocationOfContestRequestTaskEditor'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '409':
          description: Location already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/editor/base_olympiad/{id_base_olympiad}/add_target_classes:
    post:
      parameters:
      - description: ID of the contest
        in: path
        name: id_base_olympiad
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTargetClassesOfContestRequestTaskEditor'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/editor/base_olympiad/{id_base_olympiad}/remove_target_classes:
    post:
      parameters:
      - description: ID of the target class
        in: path
        name: id_base_olympiad
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTargetClassesOfContestRequestTaskEditor'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '409':
          description: Location already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/admin/olympiad_type/create:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOlympiadTypeRequestTaskAdmin'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OlympiadTypeResponseTaskAdmin'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/admin/olympiad_type/{id_olympiad_type}/remove:
    post:
      parameters:
      - description: Id of the olympiad type
        in: path
        name: id_olympiad_type
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
        '404':
          description: Olympiad type not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/admin/location/create_online:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOnlineLocationRequestTaskAdmin'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationResponseTaskAdmin'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/admin/location/create_russia:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRussiaLocationRequestTaskAdmin'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationResponseTaskAdmin'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/admin/location/create_other:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOtherLocationRequestTaskAdmin'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationResponseTaskAdmin'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/admin/location/{id_location}/remove:
    post:
      parameters:
      - description: Id of the location
        in: path
        name: id_location
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
        '404':
          description: Olympiad type not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/participant/contest/{id_contest}/variant/self:
    get:
      parameters:
      - description: Id of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariantWithCompletedTasksCountTaskParticipant'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
        '404':
          description: User not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/participant/contest/{id_contest}/enroll:
    post:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollRequestTaskParticipant'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '409':
          description: User already enrolled
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/participant/contest/{id_contest}/change_location:
    post:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollRequestTaskParticipant'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '409':
          description: User already enrolled
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/participant/contest/{id_contest}/tasks/self:
    get:
      parameters:
      - description: Id of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllTaskResponseTaskParticipant'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
        '404':
          description: User not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/participant/contest/{id_contest}/tasks/{id_task}/image/self:
    get:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      - description: ID of the task
        in: path
        name: id_task
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            image/jpeg:
              schema:
                format: binary
                type: string
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/participant/contest/{id_contest}/certificate/self:
    get:
      parameters:
      - description: Id of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
        '404':
          description: User not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/participant/olympiad/{id_olympiad}/stage/{id_stage}/contest/all:
    get:
      parameters:
      - description: Id of the olympiad
        in: path
        name: id_olympiad
        required: true
        schema:
          type: integer
      - description: Id of the stage
        in: path
        name: id_stage
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllOlympiadsResponseTaskUnauthorized'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
        '404':
          description: User not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/participant/olympiad/all:
    get:
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: base_contest_id
        required: false
        schema:
          type: integer
      - in: query
        name: location_id
        required: false
        schema:
          type: integer
      - in: query
        name: end_date
        required: false
        schema:
          format: date-time
          type: string
      - in: query
        name: target_classes
        required: false
        schema:
          enum:
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - student
          type: string
      - in: query
        name: only_count
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterSimpleContestResponseTaskParticipant'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
        '404':
          description: User not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/participant/olympiad/{id_olympiad}/stage/{id_stage}/contest/{id_contest}:
    get:
      parameters:
      - description: Id of the olympiad
        in: path
        name: id_olympiad
        required: true
        schema:
          type: integer
      - description: Id of the stage
        in: path
        name: id_stage
        required: true
        schema:
          type: integer
      - description: Id of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contest'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
        '404':
          description: User not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/participant/olympiad/{id_olympiad}:
    get:
      parameters:
      - description: Id of the olympiad
        in: path
        name: id_olympiad
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contest'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
        '404':
          description: User not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/unauthorized/olympiad_type/all:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllOlympiadTypesResponseTaskUnauthorized'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
        '404':
          description: Olympiad type not found
  /tasks/unauthorized/olympiad_type/{id_olympiad_type}:
    get:
      parameters:
      - description: Id of the olympiad type
        in: path
        name: id_olympiad_type
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OlympiadType'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
        '404':
          description: Olympiad type not found
  /tasks/unauthorized/location/all:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllLocationResponseTaskUnauthorized'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
        '404':
          description: Olympiad type not found
  /tasks/unauthorized/location/{id_location}:
    get:
      parameters:
      - description: Id of the location
        in: path
        name: id_location
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OlympiadLocation'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
        '404':
          description: Olympiad type not found
  /tasks/unauthorized/base_olympiad/all:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllBaseContestResponseTaskUnauthorized'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
        '404':
          description: Olympiad type not found
  /tasks/unauthorized/base_olympiad/{id_base_olympiad}:
    get:
      parameters:
      - description: Id of the base contest
        in: path
        name: id_base_olympiad
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseContest'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
        '404':
          description: Olympiad type not found
  /tasks/unauthorized/olympiad/all:
    get:
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          type: integer
      - in: query
        name: base_contest_id
        required: false
        schema:
          type: integer
      - in: query
        name: location_id
        required: false
        schema:
          type: integer
      - in: query
        name: end_date
        required: false
        schema:
          format: date-time
          type: string
      - in: query
        name: target_class
        required: false
        schema:
          type: integer
      - in: query
        name: only_count
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterSimpleContestResponse'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
        '404':
          description: Olympiad type not found
  /tasks/unauthorized/base_olympiad/{id_base_olympiad}/olympiad/{id_olympiad}:
    get:
      parameters:
      - description: Id of the base contest
        in: path
        name: id_base_olympiad
        required: true
        schema:
          type: integer
      - description: Id of the olympiad
        in: path
        name: id_olympiad
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contest'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
        '404':
          description: Olympiad type not found
  /tasks/unauthorized/olympiad/{id_olympiad}/stage/{id_stage}:
    get:
      parameters:
      - description: Id of the olympiad
        in: path
        name: id_olympiad
        required: true
        schema:
          type: integer
      - description: Id of the stage
        in: path
        name: id_stage
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stage'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
        '404':
          description: Olympiad type not found
  /tasks/unauthorized/olympiad/{id_olympiad}/stage/all:
    get:
      parameters:
      - description: Id of the olympiad
        in: path
        name: id_olympiad
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllStagesResponseTaskUnauthorized'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
        '404':
          description: Olympiad type not found
  /tasks/unauthorized/target_class/all:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllTargetClassesRequestTaskUnauthorized'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Target class already in use
        '404':
          description: Target class not found
  /tasks/unauthorized/target_class/{id_target_class}:
    get:
      parameters:
      - description: Id of the location
        in: path
        name: id_target_class
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetClass'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Target class already in use
        '404':
          description: Target class not found
  /tasks/control_users/contest/{id_contest}/add_user:
    post:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserInContestRequestTaskControlUsers'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/control_users/contest/{id_contest}/edit_users:
    patch:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserInContestRequestTaskControlUsers'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '404':
          description: Not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/control_users/contest/{id_contest}/remove_user:
    post:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserInContestRequestTaskControlUsers'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/control_users/contest/{id_contest}/change_location:
    post:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeUsersLocationInContestRequestTaskControlUsers'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/control_users/contest/{id_contest}/user/all:
    get:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponseTaskControlUsers'
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /tasks/control_users/contest/{id_contest}/user/{id_user}/certificate:
    get:
      parameters:
      - description: ID of the contest
        in: path
        name: id_contest
        required: true
        schema:
          type: integer
      - description: ID of the user
        in: path
        name: id_user
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: OK
        '400':
          description: Bad request
        '409':
          description: Olympiad type already in use
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
servers:
- url: /contest
