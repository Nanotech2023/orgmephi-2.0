openapi: 3.0.0
info:
  title: User service API
  description: API description in Markdown.
  version: 1.0.0
servers:
  - url: http://127.0.0.1:5000
  - url: http://127.0.0.1:5000/user/registration

paths:
  ######################################################################################################################
  ##                                             Path definition                                                      ##
  ######################################################################################################################

  /school:
    post:
      summary: Register a new school student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestRegistrationSchool'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseRegistrationSchool'
        '400':
          description: Bad request or weak password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '409':
          description: Username already in use
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /university:
    post:
      summary: Register a new university student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestRegistrationUniversity'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseRegistrationUniversity'
        '400':
          description: Bad request or weak password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '409':
          description: Username already in use
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /info/universities:
    get:
      summary: Get known university list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseInfoUniversities'
  /info/countries:
    get:
      summary: Get known country list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseInfoCountries'


components:
  schemas:

  ######################################################################################################################
  ##                                             Error handling                                                       ##
  ######################################################################################################################

    errorResponse:
      title: 'Error response'
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            title: 'Error value'
            required:
              - status
              - title
            properties:
              class:
                type: string
              status:
                type: integer
              title:
                type: string

  ######################################################################################################################
  ##                                             Common data types                                                    ##
  ######################################################################################################################

    typeEmail:
      type: string
      pattern: '^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
      maxLength: 64
      example: 'example@example.org'
    typePhone:
      type: string
      pattern: '(?:(?:\+?1\s*(?:[.-]\s*)?)?(?:(\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]‌​)\s*)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\s*(?:[.-]\s*)?)([2-9]1[02-9]‌​|[2-9][02-9]1|[2-9][02-9]{2})\s*(?:[.-]\s*)?([0-9]{2})\s*(?:[.-]\s*)?([0-9]{2})(?:\s*(?:#|x\.?|ext\.?|extension)\s*(\d+))?$'
      maxLength: 32
      example: 8-800-555-35-35
    typePassword:
      type: string
      format: password
      maxLength: 128
      example: qwertyA*1
    typeUsername:
      type: string
      # Must be equal to or larger than email max length
      maxLength: 64
    typeCommonName:
      type: string
      maxLength: 32
    typeDate:
      type: string
      format: date
    typeGrade:
      type: integer
      minimum: 1
      maximum: 5
      example: 1
    typeUserRole:
      title: 'User role'
      type: string
      enum: [ 'Admin', 'Creator', 'Participant', 'System' ]
    typeUserType:
      title: 'All user type'
      type: string
      enum: [ 'PreUniversity', 'Enrollee', 'School', 'University', 'Internal', 'PreRegister' ]
    typeUserTypeSchool:
      title: 'Types for school students'
      type: string
      enum: [ 'PreUniversity', 'Enrollee', 'School' ]
    typeUserTypeUniversity:
      title: 'Types for university students'
      type: string
      enum: [ 'University' ]
    typeIdentifier:
      type: integer

  ######################################################################################################################
  ##                                             Composite data types                                                 ##
  ######################################################################################################################

    # Registration data

    typeRegistrationCredentials:
      title: 'Authentication info'
      required:
        - email
        - password
      properties:
        email:
          $ref: '#/components/schemas/typeEmail'
        password:
          $ref: '#/components/schemas/typePassword'
    typeRegistrationPersonalInfo:
      title: 'Personal info that is required for registration'
      required:
        - first_name
        - second_name
        - middle_name
        - date_of_birth
      properties:
        first_name:
          $ref: '#/components/schemas/typeCommonName'
        second_name:
          $ref: '#/components/schemas/typeCommonName'
        middle_name:
          $ref: '#/components/schemas/typeCommonName'
        date_of_birth:
          $ref: '#/components/schemas/typeDate'
    typeRegistrationStudentInfo:
      title: 'Student info that is required for registration'
      required:
        - phone_number
        - university
        - grade
        - university_country
        - citizenship
        - region
        - city
      properties:
        phone_number:
          $ref: '#/components/schemas/typePhone'
        university:
          $ref: '#/components/schemas/typeCommonName'
        grade:
          $ref: '#/components/schemas/typeGrade'
        university_country:
          $ref: '#/components/schemas/typeCommonName'
        citizenship:
          $ref: '#/components/schemas/typeCommonName'
        region:
          $ref: '#/components/schemas/typeCommonName'
        city:
          $ref: '#/components/schemas/typeCommonName'
    typePreregisterInfo:
      title: 'Credentials for preregistered users'
      required:
        - registration_number
        - password
      properties:
        registration_number:
          $ref: '#/components/schemas/typeUsername'
        password:
          $ref: '#/components/schemas/typePassword'


    # User data

    typeUserInfo:
      title: 'Common user info'
      properties:
        id:
          $ref: '#/components/schemas/typeIdentifier'
        username:
          $ref: '#/components/schemas/typeCommonName'
        role:
          $ref: '#/components/schemas/typeUserRole'
        type:
          $ref: '#/components/schemas/typeUserType'


  ######################################################################################################################
  ##                                             Path schemas                                                         ##
  ######################################################################################################################

    # /register/school

    requestRegistrationSchool:
      title: 'Registration data for school students'
      required:
        - auth_info
        - personal_info
        - register_type
      properties:
        auth_info:
          $ref: '#/components/schemas/typeRegistrationCredentials'
        personal_info:
          $ref: '#/components/schemas/typeRegistrationPersonalInfo'
        register_type:
          $ref: '#/components/schemas/typeUserTypeSchool'
        register_confirm:
          $ref: '#/components/schemas/typePreregisterInfo'
    responseRegistrationSchool:
      $ref: '#/components/schemas/typeUserInfo'

    # /register/university

    requestRegistrationUniversity:
      title: 'Registration data for university students'
      required:
        - auth_info
        - personal_info
        - register_type
        - student_info
      properties:
        auth_info:
          $ref: '#/components/schemas/typeRegistrationCredentials'
        personal_info:
          $ref: '#/components/schemas/typeRegistrationPersonalInfo'
        register_type:
          $ref: '#/components/schemas/typeUserTypeUniversity'
        student_info:
          $ref: '#/components/schemas/typeRegistrationStudentInfo'
    responseRegistrationUniversity:
      $ref: '#/components/schemas/typeUserInfo'

    # /info/universities

    responseInfoUniversities:
      title: 'Get university list response'
      required:
        - university_list
      properties:
        university_list:
          type: array
          items:
            $ref: '#/components/schemas/typeCommonName'

    # /info/countries

    responseInfoCountries:
      title: 'Get country list response'
      required:
        - country_list
      properties:
        country_list:
          type: array
          items:
            $ref: '#/components/schemas/typeCommonName'
