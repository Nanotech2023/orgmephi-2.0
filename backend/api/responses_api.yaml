components:
  schemas:
    AllUserAnswersResponse:
      properties:
        contest_id:
          type: integer
        user_answers:
          items:
            $ref: '#/components/schemas/AnswerWithoutMark'
          type: array
        user_id:
          type: integer
        work_id:
          type: integer
      required:
      - contest_id
      - user_id
      - work_id
      type: object
    AllUserMarksResponse:
      properties:
        contest_id:
          type: integer
        user_answers:
          items:
            $ref: '#/components/schemas/BaseAnswer'
          type: array
        user_id:
          type: integer
        work_id:
          type: integer
      required:
      - contest_id
      - user_answers
      - user_id
      - work_id
      type: object
    AllUserResultsResponse:
      properties:
        results:
          items:
            $ref: '#/components/schemas/UserResultsForContestResponse'
          type: array
      required:
      - results
      type: object
    Answer:
      discriminator:
        mapping:
          MultipleChoiceAnswer: '#/components/schemas/MultipleChoiceAnswer'
          PlainAnswerFile: '#/components/schemas/PlainAnswerFile'
          PlainAnswerText: '#/components/schemas/PlainAnswerText'
          RangeAnswer: '#/components/schemas/RangeAnswer'
        propertyName: answer_type
      oneOf:
      - $ref: '#/components/schemas/PlainAnswerText'
      - $ref: '#/components/schemas/RangeAnswer'
      - $ref: '#/components/schemas/MultipleChoiceAnswer'
      - $ref: '#/components/schemas/PlainAnswerFile'
    AnswerWithoutMark:
      properties:
        answer_id:
          readOnly: true
          type: integer
        answer_type:
          enum:
          - PlainAnswerText
          - PlainAnswerFile
          - RangeAnswer
          - MultipleChoiceAnswer
          - BaseAnswer
          type: string
        task_id:
          nullable: true
          readOnly: true
          type: integer
      type: object
    BaseAnswer:
      properties:
        answer_id:
          readOnly: true
          type: integer
        answer_type:
          enum:
          - PlainAnswerText
          - PlainAnswerFile
          - RangeAnswer
          - MultipleChoiceAnswer
          - BaseAnswer
          type: string
        mark:
          nullable: true
          readOnly: true
          type: number
        right_answer:
          $ref: '#/components/schemas/RightAnswer'
        task_id:
          nullable: true
          readOnly: true
          type: integer
        task_points:
          nullable: true
          readOnly: true
          type: integer
      required:
      - right_answer
      - task_points
      type: object
    ContestInfo:
      properties:
        contest_id:
          readOnly: true
          type: integer
        end_year:
          type: integer
        name:
          readOnly: true
          type: string
        start_year:
          type: integer
        subject:
          enum:
          - Math
          - Physics
          - Informatics
          - Natural Sciences
          - Engineering Sciences
          - Other
          type: string
      required:
      - contest_id
      - end_year
      - name
      - start_year
      type: object
    ContestResultSheetResponse:
      properties:
        contest_id:
          type: integer
        user_row:
          items:
            $ref: '#/components/schemas/UserResponseList'
          type: array
      required:
      - contest_id
      - user_row
      type: object
    MultipleAnswerRequest:
      properties:
        answers:
          items:
            $ref: '#/components/schemas/MultipleUserAnswerRequest'
          type: array
      required:
      - answers
      type: object
    MultipleChoiceAnswer:
      properties:
        answers:
          nullable: true
          type: string
      required:
      - answers
      type: object
    MultipleRightAnswer:
      properties:
        answers:
          items:
            type: string
          type: array
      required:
      - answers
      type: object
    MultipleUserAnswerRequest:
      properties:
        answer:
          maxLength: 1024
          type: string
      required:
      - answer
      type: object
    PlainAnswerFile:
      properties:
        filetype:
          enum:
          - txt
          - pdf
          - jpg
          - doc
          - docx
          - png
          - gif
          - odt
          type: string
      type: object
    PlainAnswerRequest:
      properties:
        answer_text:
          maxLength: 1024
          type: string
      required:
      - answer_text
      type: object
    PlainAnswerText:
      properties:
        answer_text:
          nullable: true
          type: string
      type: object
    PlainRightAnswer:
      properties:
        answer:
          type: string
      required:
      - answer
      type: object
    RangeAnswer:
      properties:
        answer:
          type: number
      required:
      - answer
      type: object
    RangeAnswerRequest:
      properties:
        answer:
          type: number
      required:
      - answer
      type: object
    RangeRightAnswer:
      properties:
        end_value:
          type: number
        start_value:
          type: number
      required:
      - end_value
      - start_value
      type: object
    RightAnswer:
      discriminator:
        mapping:
          Multiple: '#/components/schemas/MultipleRightAnswer'
          Plain: '#/components/schemas/PlainRightAnswer'
          Range: '#/components/schemas/RangeRightAnswer'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/PlainRightAnswer'
      - $ref: '#/components/schemas/RangeRightAnswer'
      - $ref: '#/components/schemas/MultipleRightAnswer'
    UserAnswerMarkResponse:
      properties:
        mark:
          type: number
      required:
      - mark
      type: object
    UserResponseList:
      properties:
        mark:
          nullable: true
          type: number
        user_id:
          type: integer
      required:
      - user_id
      type: object
    UserResponseStatusResponse:
      properties:
        status:
          enum:
          - InProgress
          - NotChecked
          - Accepted
          - Rejected
          - Appeal
          - Correction
          - NoResults
          type: string
      required:
      - status
      type: object
    UserResultsForContestResponse:
      properties:
        contest_info:
          $ref: '#/components/schemas/ContestInfo'
        mark:
          type: number
        status:
          enum:
          - InProgress
          - NotChecked
          - Accepted
          - Rejected
          - Appeal
          - Correction
          - NoResults
          type: string
        user_status:
          enum:
          - Winner 1
          - Winner 2
          - Winner 3
          - Diploma 1
          - Diploma 2
          - Diploma 3
          - Participant
          type: string
      required:
      - contest_info
      - mark
      - status
      - user_status
      type: object
    UserTimeResponseRequest:
      properties:
        time:
          nullable: false
          type: integer
          x-unit: seconds
      required:
      - time
      type: object
  securitySchemes:
    CSRFAccessToken:
      in: header
      name: X-CSRF-TOKEN
      type: apiKey
    CSRFRefreshToken:
      in: header
      name: X-CSRF-TOKEN
      type: apiKey
    JWTAccessToken:
      in: cookie
      name: access_token_cookie
      type: apiKey
    JWTRefreshToken:
      in: cookie
      name: refresh_token_cookie
      type: apiKey
info:
  title: aggregate_contest_responses
  version: 1.0.0
openapi: 3.0.2
paths:
  /responses/creator/contest/{contest_id}/user/{user_id}/create:
    post:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the user
        in: path
        name: user_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
        '403':
          description: Permission Denied
        '404':
          description: User or contest not found
        '409':
          description: Timing error
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /responses/creator/contest/{contest_id}/user/{user_id}/response:
    get:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the user
        in: path
        name: user_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUserAnswersResponse'
          description: OK
        '403':
          description: Restriction error
        '404':
          description: User or contest not found
      security:
      - JWTAccessToken: []
  /responses/creator/contest/{contest_id}/user/{user_id}/mark:
    get:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the user
        in: path
        name: user_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUserMarksResponse'
          description: OK
        '403':
          description: Restriction error
        '404':
          description: User or contest not found
      security:
      - JWTAccessToken: []
  /responses/creator/contest/{contest_id}/task/{task_id}/user/{user_id}/plain/file:
    get:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the task
        in: path
        name: task_id
        required: true
        schema:
          type: integer
      - description: Id of the user
        in: path
        name: user_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/msword:
              schema:
                format: binary
                type: string
            application/pdf:
              schema:
                format: binary
                type: string
            application/vnd.oasis.opendocument.text:
              schema:
                format: binary
                type: string
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                format: binary
                type: string
            image/gif:
              schema:
                format: binary
                type: string
            image/jpeg:
              schema:
                format: binary
                type: string
            image/png:
              schema:
                format: binary
                type: string
            text/plain:
              schema:
                format: binary
                type: string
          description: OK
        '403':
          description: Restriction error
        '404':
          description: User, contest or task not found
      security:
      - JWTAccessToken: []
  /responses/creator/contest/{contest_id}/task/{task_id}/user/{user_id}:
    get:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the task
        in: path
        name: task_id
        required: true
        schema:
          type: integer
      - description: Id of the user
        in: path
        name: user_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: OK
        '403':
          description: Restriction error
        '404':
          description: User, contest or task not found
      security:
      - JWTAccessToken: []
  /responses/creator/contest/{contest_id}/task/{task_id}/user/{user_id}/{filetype}:
    post:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the task
        in: path
        name: task_id
        required: true
        schema:
          type: integer
      - description: Id of the user
        in: path
        name: user_id
        required: true
        schema:
          type: integer
      - description: Filetype
        in: path
        name: filetype
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
      responses:
        '200':
          description: OK
        '403':
          description: Restriction error
        '404':
          description: User, contest or task not found
        '409':
          description: Timing error or file is too large
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /responses/creator/contest/{contest_id}/task/{task_id}/user/{user_id}/plain:
    post:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the task
        in: path
        name: task_id
        required: true
        schema:
          type: integer
      - description: Id of the user
        in: path
        name: user_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlainAnswerRequest'
      responses:
        '200':
          description: OK
        '403':
          description: Restriction error
        '404':
          description: User, contest or task not found
        '409':
          description: Timing error
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /responses/creator/contest/{contest_id}/task/{task_id}/user/{user_id}/range:
    post:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the task
        in: path
        name: task_id
        required: true
        schema:
          type: integer
      - description: Id of the user
        in: path
        name: user_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RangeAnswerRequest'
      responses:
        '200':
          description: OK
        '403':
          description: Restriction error
        '404':
          description: User, contest or task not found
        '409':
          description: Timing error
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /responses/creator/contest/{contest_id}/task/{task_id}/user/{user_id}/multiple:
    post:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the task
        in: path
        name: task_id
        required: true
        schema:
          type: integer
      - description: Id of the user
        in: path
        name: user_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleAnswerRequest'
      responses:
        '200':
          description: OK
        '403':
          description: Restriction error
        '404':
          description: User, contest or task not found
        '409':
          description: Timing error or wrong answers
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /responses/creator/contest/{contest_id}/user/{user_id}/status:
    post:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the user
        in: path
        name: user_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserResponseStatusResponse'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Incorrect mark or status
        '403':
          description: Restriction error
        '404':
          description: User or contest not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
    get:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the user
        in: path
        name: user_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseStatusResponse'
          description: OK
        '400':
          description: Incorrect mark or status
        '403':
          description: Restriction error
        '404':
          description: User or contest not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /responses/creator/contest/{contest_id}/list:
    get:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContestResultSheetResponse'
          description: OK
        '403':
          description: Restriction error
        '404':
          description: Contest not found
      security:
      - JWTAccessToken: []
  /responses/creator/contest/{contest_id}/task/{task_id}/user/{user_id}/mark:
    post:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the task
        in: path
        name: task_id
        required: true
        schema:
          type: integer
      - description: Id of the user
        in: path
        name: user_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAnswerMarkResponse'
        required: true
      responses:
        '200':
          description: OK
        '403':
          description: Restriction error
        '404':
          description: User or contest not found
        '409':
          description: Mark Error
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
    get:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the task
        in: path
        name: task_id
        required: true
        schema:
          type: integer
      - description: Id of the user
        in: path
        name: user_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAnswerMarkResponse'
          description: OK
        '403':
          description: Restriction error
        '404':
          description: User or contest not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /responses/creator/contest/{contest_id}/user/{user_id}/time:
    get:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the user
        in: path
        name: user_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTimeResponseRequest'
          description: OK
        '403':
          description: Restriction error
        '404':
          description: User or contest not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
    post:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the user
        in: path
        name: user_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTimeResponseRequest'
        required: true
      responses:
        '200':
          description: OK
        '403':
          description: Restriction error
        '404':
          description: User or contest not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /responses/creator/contest/{contest_id}/user/{user_id}/finish:
    post:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the user
        in: path
        name: user_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
        '403':
          description: Restriction error
        '404':
          description: User or contest not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /responses/creator/contest/{contest_id}/check:
    post:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
        '403':
          description: Restriction error
        '404':
          description: Contest not found
        '409':
          description: Olympiad error
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /responses/creator/contest/{contest_id}/winning:
    post:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
        '403':
          description: Restriction error
        '404':
          description: Contest not found
        '409':
          description: Olympiad error
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /responses/creator/contest/user/{user_id}/results:
    get:
      parameters:
      - description: Id of the user
        in: path
        name: user_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUserResultsResponse'
          description: OK
        '404':
          description: User not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /responses/participant/contest/{contest_id}/user/self/create:
    post:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
        '404':
          description: User or contest not found
        '409':
          description: Timing error
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /responses/participant/contest/{contest_id}/user/self/response:
    get:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUserAnswersResponse'
          description: OK
        '403':
          description: Not enough rights for current user
        '404':
          description: User or contest not found
      security:
      - JWTAccessToken: []
  /responses/participant/contest/{contest_id}/user/self/mark:
    get:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUserMarksResponse'
          description: OK
        '403':
          description: Not enough rights for current user
        '404':
          description: User or contest not found
        '409':
          description: The results have not yet been published
      security:
      - JWTAccessToken: []
  /responses/participant/contest/{contest_id}/task/{task_id}/user/self/plain/file:
    get:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the task
        in: path
        name: task_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/msword:
              schema:
                format: binary
                type: string
            application/pdf:
              schema:
                format: binary
                type: string
            application/vnd.oasis.opendocument.text:
              schema:
                format: binary
                type: string
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                format: binary
                type: string
            image/gif:
              schema:
                format: binary
                type: string
            image/jpeg:
              schema:
                format: binary
                type: string
            image/png:
              schema:
                format: binary
                type: string
            text/plain:
              schema:
                format: binary
                type: string
          description: OK
        '403':
          description: Not enough rights for current user
        '404':
          description: User, contest or task not found
      security:
      - JWTAccessToken: []
  /responses/participant/contest/{contest_id}/task/{task_id}/user/self:
    get:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the task
        in: path
        name: task_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: OK
        '403':
          description: Not enough rights for current user
        '404':
          description: User, contest or task not found
      security:
      - JWTAccessToken: []
  /responses/participant/contest/{contest_id}/task/{task_id}/user/self/{filetype}:
    post:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the task
        in: path
        name: task_id
        required: true
        schema:
          type: integer
      - description: Filetype
        in: path
        name: filetype
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
      responses:
        '200':
          description: OK
        '403':
          description: Not enough rights for current user
        '404':
          description: User, contest or task not found
        '409':
          description: Timing error or file is too large
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /responses/participant/contest/{contest_id}/task/{task_id}/user/self/plain:
    post:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the task
        in: path
        name: task_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlainAnswerRequest'
      responses:
        '200':
          description: OK
        '403':
          description: Not enough rights for current user
        '404':
          description: User, contest or task not found
        '409':
          description: Timing error
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /responses/participant/contest/{contest_id}/task/{task_id}/user/self/range:
    post:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the task
        in: path
        name: task_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RangeAnswerRequest'
      responses:
        '200':
          description: OK
        '403':
          description: Not enough rights for current user
        '404':
          description: User, contest or task not found
        '409':
          description: Timing error
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /responses/participant/contest/{contest_id}/task/{task_id}/user/self/multiple:
    post:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the task
        in: path
        name: task_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleAnswerRequest'
      responses:
        '200':
          description: OK
        '403':
          description: Not enough rights for current user
        '404':
          description: User, contest or task not found
        '409':
          description: Timing error
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /responses/participant/contest/{contest_id}/user/self/status:
    get:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseStatusResponse'
          description: OK
        '400':
          description: Incorrect mark or status
        '403':
          description: Invalid role of current user
        '404':
          description: User or contest not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /responses/participant/contest/{contest_id}/task/{task_id}/user/self/mark:
    get:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      - description: Id of the task
        in: path
        name: task_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAnswerMarkResponse'
          description: OK
        '404':
          description: User or contest not found
        '409':
          description: The results have not yet been published
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /responses/participant/contest/{contest_id}/user/self/time:
    get:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTimeResponseRequest'
          description: OK
        '404':
          description: User or contest not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /responses/participant/contest/{contest_id}/user/self/finish:
    post:
      parameters:
      - description: Id of the contest
        in: path
        name: contest_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
        '404':
          description: User or contest not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
  /responses/participant/contest/user/self/results:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUserResultsResponse'
          description: OK
        '404':
          description: User not found
      security:
      - JWTAccessToken: []
      - CSRFAccessToken: []
servers:
- url: /contest
