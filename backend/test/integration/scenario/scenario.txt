Сценарий работы с OrgMephi 2.0


##init
- В системе есть администратор.


##register_creator
- Администратор регистрирует организатора.
- Администратор выдает организатору права.
- Администратор указывает личные данные организатора.


##create_olympiad_type
- Администратор создает новый тип олимпиады и площадку для
проведения олимпиады, например, онлайн.


##create_olympiad
- Организатор создает базовую олимпиаду, задавая описание,
правила, условия становления призером и лауреатом
- На основании базовой олимпиады, организатор создает составную
олимпиаду.
- Организатор создает этап олимпиады, в котором задается условие
олимпиады
- Организатор создает простую олимпиаду. В ней он указывает
длительность олимпиады, вид проведения - онлайн, дату начала олимпиады
и конца, дату конца подачи заявок на участие в олимпиаде, дату
публикации результатов.
- Организатор создает несколько вариантов (не менее 5) для данной олимпиады.
- Организатор создает для этих вариантов задачи (не менее по 1 на тип) трех типов -
простая текстовая задача, с множественным выбором, с ответом
в определенном диапазоне.
- Для каждого задания указывается номер задания и количество возможных,
баллов и показывать ли пользователю ответ на задание после участия в олимпиаде.
- В простом задании, где ответ принимается текстом или файлом, задается
рекомендуемый ответ.
- В задании с ответом в диапазоне задается интервал, в котором должен
находиться ответ.
- В задании с множественным выбором задаются все варианты, и указывается
верные ответы.
Чтобы получить полный балл за это задание, необходимо дать все правильные
варианты, и ни одного неправильного.


##create_news
- Администратор создает несколько категорий для новостей.
- Редактор создает новость, добавляет к ним необходимые картинки. И публикует
новости в определенной категории.


##browse_news
- Будущий участник олимпиады заходит на сайт. Он видит всю необходимую
информацию про олимпиады и места их проведения, а также опубликованные новости.


##register_participants
- 6 участников регистрируются как школьники
- Участники вносят необходимую личную информацию - данные о месте проживания, о документе (паспорте),
о наличии инвалидности
- Участники вводят информацию о школе


##enroll
- Пользователи, просматривая список доступных ему олимпиад, регистрируются на них до
даты окончания регистрации и выбирают место, где они будут ее писать.
Для пользователей случайным образом выбирается вариант.
- 1 пользователь пытается зарегистрироваться на олимпиаду после окончания сроков регистрации


##participate
- Когда олимпиада начинается, пользователи начинают выполнение.
Создается ответ пользователя, где фиксируется время его начала.
- 3 Пользователя (a,b,c) вносят ответы и сохраняют их (с различным количеством правильных ответов).
- 3 пользователя (a,b,c) проверяют время до конца олимпиады.
- 1 Пользователь (a) завершает олимпиаду
- Организатор олимпиады продляет время на олимпиаду для 1 пользователя (d).
- 1 Пользователя (d) вносят ответы, сохраняет их и завершает олимпиаду.
- 1 Пользователь (b) ожидает конца олимпиады не завершая ее вручную
- 1 Пользователь (c) ожидает конца олимпиады не завершая ее вручную, после чего пытается изменить один из ответов
- 1 Пользователь (e) ожидает конца олимпиады не начиная ее, после чего пытается начать


##support
- У пользователя возникает вопрос, он задает его в сервисе сообщений
указывая вопрос и тему сообщения.
- Организатор читает сообщение
- Организатор отвечает пользователю и закрывает вопрос


##check
- Когда олимпиада закончилась, организатор запускает автоматическую
проверку олимпиады. Автоматически проверяются только задачи с диапазоном
ответов и множественным выбором.
- Организатор олимпиады должен самостоятельно проверить задачу с текстовым
ответом или файлом.
- После проверки олимпиады, организатор автоматически
проставляет пользователям их статусы.


##results
- Пользователи узнают свой результат после официальной даты публикации результатов.


##appeal_request
- 2 пользователя не согласны с результатами олимпиады, и подают
апелляцию в сервисе сообщений. Пользователи описывает с чем они не согласны.
- Организатор читает сообщения


##view_work
- Организатор просматривает работу 1-го участника, подавшего апелляцию
- Организатор увеличивает оценку 1-го участника за задачу со свободным ответом
- Организатор меняет статус 1-го участника на более высокий
- Организатор просматривает работу 2-го участника, подавшего апелляцию
- Организатор не меняет оценок 2-го участника


##appeal_response:
- Организатор отвечает 1-му пользователю, и закрывает вопрос со статусом "принято"
- Организатор отвечает 2-му пользователю, и закрывает вопрос со статусом "отклонено"
